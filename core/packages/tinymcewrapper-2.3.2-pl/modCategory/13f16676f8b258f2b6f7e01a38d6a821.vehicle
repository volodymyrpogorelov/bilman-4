<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      'eceb12bf496bad7bff3405ffae381fc1' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"TinymceWrapperTVs","description":"TinyMCE for RichTextarea TVs attached to resource via template. File and Image TVs do not need a chunk.","editor_type":0,"category":0,"cache_type":0,"snippet":"tinymce.init({\\n  mode: \\"exact\\", \\/\\/DO NOT TOUCH\\n  selector: \\".modx-richtext\\", \\/\\/DO NOT TOUCH\\n  [[+commonTinyMCECode]]\\n  plugins: \\"autoresize,preview,paste,contextmenu,image,wordcount,fullscreen,code,link,charmap,searchreplace,textpattern,emoticons,insertdatetime\\",\\n  paste_word_valid_elements: \\"a,div,b,strong,i,em,h1,h2,h3,p,blockquote,ol,ul,pre\\",\\n  \\/\\/valid_elements: \\"iframe[*],object[*],audio[*],-span[!title|!class<test test2],a[href|target|class|rel|title|data-ajax|data-iframe],strong,b,-p[class<text-align-left?text-align-center?text-align-right],br,-h1[class|data-ajax|data-iframe],-h2[class|data-ajax|data-iframe],-h3[class|data-ajax|data-iframe],-img[!src|!alt|!class=round_img|data-ajax|data-iframe],em,-blockquote,pre[class],-ol,-ul,-li,-code[class]\\",\\n  \\/\\/valid_children: \\"-li[ul],-li[ol],-li[div],-strong[*],-em[*],-h1[*],-h2[*],-h3[*],-a[strong|em|h1|h2|h3|p|div],blockquote[p|ol|ul],pre[code],div[pre]\\",\\n  resize: true,\\n  autoresize_min_height: 100,\\n  autoresize_max_height: 400,\\n  toolbar: \\"preview fullscreen | code | newdocument | undo redo | blockquote | bold | italic | aligncenter | bullist numlist | link unlink | image | styleselect | charmap emoticons insertdatetime | searchreplace\\",\\n  contextmenu: \\"code | removeformat | link | image\\",\\n  setup: function(editor) {\\n    editor.on(\\"init\\", function() {\\n      containerId = $(editor.getContainer()).attr(\\"id\\"); \\/\\/float fullscreen link\\n      $(\\"#\\" + containerId + \\" .mce-i-fullscreen\\").parent().parent().parent().parent().css(\\"float\\", \\"right\\");\\n    });\\n    editor.on(\'keydown\', function(evt) { \\/\\/ctrl + s = save \\n      if (evt.keyCode == 83 && evt.ctrlKey && !evt.shiftKey && !evt.altKey && !evt.metaKey) {\\n        evt.preventDefault();\\n        $(\'#modx-abtn-save button\').trigger(\\"click\\");\\n      }\\n      if (evt.keyCode == 27) { \\/\\/escape key = remove fullscreen \\n        evt.preventDefault();\\n        if ($(\'.mce-fullscreen\').length) {\\n          tinymce.activeEditor.execCommand(\\"mceFullscreen\\")\\n        }\\n      }\\n    });\\n  }\\n});","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"tinymce.init({\\n  mode: \\"exact\\", \\/\\/DO NOT TOUCH\\n  selector: \\".modx-richtext\\", \\/\\/DO NOT TOUCH\\n  [[+commonTinyMCECode]]\\n  plugins: \\"autoresize,preview,paste,contextmenu,image,wordcount,fullscreen,code,link,charmap,searchreplace,textpattern,emoticons,insertdatetime\\",\\n  paste_word_valid_elements: \\"a,div,b,strong,i,em,h1,h2,h3,p,blockquote,ol,ul,pre\\",\\n  \\/\\/valid_elements: \\"iframe[*],object[*],audio[*],-span[!title|!class<test test2],a[href|target|class|rel|title|data-ajax|data-iframe],strong,b,-p[class<text-align-left?text-align-center?text-align-right],br,-h1[class|data-ajax|data-iframe],-h2[class|data-ajax|data-iframe],-h3[class|data-ajax|data-iframe],-img[!src|!alt|!class=round_img|data-ajax|data-iframe],em,-blockquote,pre[class],-ol,-ul,-li,-code[class]\\",\\n  \\/\\/valid_children: \\"-li[ul],-li[ol],-li[div],-strong[*],-em[*],-h1[*],-h2[*],-h3[*],-a[strong|em|h1|h2|h3|p|div],blockquote[p|ol|ul],pre[code],div[pre]\\",\\n  resize: true,\\n  autoresize_min_height: 100,\\n  autoresize_max_height: 400,\\n  toolbar: \\"preview fullscreen | code | newdocument | undo redo | blockquote | bold | italic | aligncenter | bullist numlist | link unlink | image | styleselect | charmap emoticons insertdatetime | searchreplace\\",\\n  contextmenu: \\"code | removeformat | link | image\\",\\n  setup: function(editor) {\\n    editor.on(\\"init\\", function() {\\n      containerId = $(editor.getContainer()).attr(\\"id\\"); \\/\\/float fullscreen link\\n      $(\\"#\\" + containerId + \\" .mce-i-fullscreen\\").parent().parent().parent().parent().css(\\"float\\", \\"right\\");\\n    });\\n    editor.on(\'keydown\', function(evt) { \\/\\/ctrl + s = save \\n      if (evt.keyCode == 83 && evt.ctrlKey && !evt.shiftKey && !evt.altKey && !evt.metaKey) {\\n        evt.preventDefault();\\n        $(\'#modx-abtn-save button\').trigger(\\"click\\");\\n      }\\n      if (evt.keyCode == 27) { \\/\\/escape key = remove fullscreen \\n        evt.preventDefault();\\n        if ($(\'.mce-fullscreen\').length) {\\n          tinymce.activeEditor.execCommand(\\"mceFullscreen\\")\\n        }\\n      }\\n    });\\n  }\\n});"}',
        'guid' => '0da3ea5d85539657a2486f4172e4709b',
        'native_key' => 1,
        'signature' => '7b63bcbd0c90fd2299478196707974cd',
      ),
      '6978ff6528f6dad96775c3477e1ed4c3' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":2,"source":0,"property_preprocess":0,"name":"TinymceWrapperContent","description":"TinyMCE for Resource Content Textarea","editor_type":0,"category":0,"cache_type":0,"snippet":"tinymce.init({\\n  selector: \\"#ta\\",\\n  [[+commonTinyMCECode]]\\n  statusbar: true,\\n  plugins: \\"imagetools,autoresize,preview,paste,contextmenu,image,wordcount,fullscreen,code,charmap,searchreplace,textpattern,emoticons,insertdatetime\\",\\n  \\/\\/paste_word_valid_elements: \\"a,div,b,strong,i,em,h1,h2,h3,p,blockquote,ol,ul,pre\\",\\n  \\/\\/valid_elements: \\"iframe[*],object[*],audio[*],-span,a[href|target|class|rel|title|onclick],-strong,-b,-p[class<text-align-left?text-align-center?text-align-right],br,-h1,-h2,-h3,-figure,-figcaption,-img[!src|!alt],em,-blockquote,pre[class],-ol,-ul,-li,-code,hr[*]\\",\\n  \\/\\/valid_children: \\"figure[img|figcaption],-li[ul],-li[ol],-li[div],-strong[*],-em[*],-h1[*],-h2[*],-h3[*],-a[strong|em|h1|h2|h3|p|div],blockquote[p|ol|ul],pre[code],div[pre]\\",\\n  resize: true,\\n  autoresize_min_height: 100,\\n  toolbar: \\"preview fullscreen | twPreCodeManager code | undo redo | newdocument |  blockquote | bold italic aligncenter | bullist numlist | link unlink | image | styleselect charmap emoticons insertdatetime searchreplace bubbleBarOptionsButton\\",\\n  contextmenu: \\"code | twPreCodeManager | fullscreen | removeformat | link | image\\"\\n});","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"tinymce.init({\\n  selector: \\"#ta\\",\\n  [[+commonTinyMCECode]]\\n  statusbar: true,\\n  plugins: \\"imagetools,autoresize,preview,paste,contextmenu,image,wordcount,fullscreen,code,charmap,searchreplace,textpattern,emoticons,insertdatetime\\",\\n  \\/\\/paste_word_valid_elements: \\"a,div,b,strong,i,em,h1,h2,h3,p,blockquote,ol,ul,pre\\",\\n  \\/\\/valid_elements: \\"iframe[*],object[*],audio[*],-span,a[href|target|class|rel|title|onclick],-strong,-b,-p[class<text-align-left?text-align-center?text-align-right],br,-h1,-h2,-h3,-figure,-figcaption,-img[!src|!alt],em,-blockquote,pre[class],-ol,-ul,-li,-code,hr[*]\\",\\n  \\/\\/valid_children: \\"figure[img|figcaption],-li[ul],-li[ol],-li[div],-strong[*],-em[*],-h1[*],-h2[*],-h3[*],-a[strong|em|h1|h2|h3|p|div],blockquote[p|ol|ul],pre[code],div[pre]\\",\\n  resize: true,\\n  autoresize_min_height: 100,\\n  toolbar: \\"preview fullscreen | twPreCodeManager code | undo redo | newdocument |  blockquote | bold italic aligncenter | bullist numlist | link unlink | image | styleselect charmap emoticons insertdatetime searchreplace bubbleBarOptionsButton\\",\\n  contextmenu: \\"code | twPreCodeManager | fullscreen | removeformat | link | image\\"\\n});"}',
        'guid' => '011f7750f5a93f82fbd39abf30fe70ee',
        'native_key' => 2,
        'signature' => '312fdd72f289d566e66640f1877286e3',
      ),
      '63b218a31b850f2a4aa14bf26f7af2b5' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":3,"source":0,"property_preprocess":0,"name":"TinymceWrapperIntrotext","description":"TinyMCE for Resource Introtext Textarea","editor_type":0,"category":0,"cache_type":0,"snippet":"tinymce.init({\\n  selector: \\"#modx-resource-introtext\\",\\n  [[+commonTinyMCECode]]\\n  plugins: \\"contextmenu,charmap,paste,link,preview,code,insertdatetime\\",\\n  toolbar: \\"code | undo redo | newdocument | preview | styleselect | blockquote | bold | italic | bullist numlist | link unlink | charmap | insertdatetime\\",\\n  contextmenu: \\"link,code,styleselect\\",\\n  resize: true,\\n  forced_root_block: \'\',\\n  force_br_newlines: true,\\n  force_p_newlines: false,\\n  \\/\\/valid_elements: \\"div,h1,h2,h3,h4,h5,h6,strong,b,i,em,span[*],blockquote,ol,ul,li,a\\",\\n \\/\\/paste_word_valid_elements: \\"div,h1,h2,h3,h4,h5,h6,strong,b,i,em,span,blockquote,ol,ul,li,a\\",\\n  elementpath: false\\n});","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"tinymce.init({\\n  selector: \\"#modx-resource-introtext\\",\\n  [[+commonTinyMCECode]]\\n  plugins: \\"contextmenu,charmap,paste,link,preview,code,insertdatetime\\",\\n  toolbar: \\"code | undo redo | newdocument | preview | styleselect | blockquote | bold | italic | bullist numlist | link unlink | charmap | insertdatetime\\",\\n  contextmenu: \\"link,code,styleselect\\",\\n  resize: true,\\n  forced_root_block: \'\',\\n  force_br_newlines: true,\\n  force_p_newlines: false,\\n  \\/\\/valid_elements: \\"div,h1,h2,h3,h4,h5,h6,strong,b,i,em,span[*],blockquote,ol,ul,li,a\\",\\n \\/\\/paste_word_valid_elements: \\"div,h1,h2,h3,h4,h5,h6,strong,b,i,em,span,blockquote,ol,ul,li,a\\",\\n  elementpath: false\\n});"}',
        'guid' => '22b417438d53b534a2322f48a39bb5c4',
        'native_key' => 3,
        'signature' => '10062736f28a34602d64794671d7bc1b',
      ),
      'ed59bc50e90d54596d7c3639db5ff431' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":4,"source":0,"property_preprocess":0,"name":"TinymceWrapperDescription","description":"TinyMCE for Resource Description Textarea","editor_type":0,"category":0,"cache_type":0,"snippet":"tinymce.init({\\n  selector: \\"#modx-resource-description\\",\\n  [[+commonTinyMCECode]]\\n  plugins: \\"contextmenu,charmap,paste,link,preview,code,insertdatetime\\",\\n  toolbar: \\"code | undo redo | newdocument | preview | styleselect | blockquote | bold | italic | bullist numlist | link unlink | charmap | insertdatetime\\",\\n  contextmenu: \\"link,code,styleselect\\",\\n  resize: true,\\n  forced_root_block: \'\',\\n  force_br_newlines: true,\\n  force_p_newlines: false,\\n  \\/\\/valid_elements: \\"div,h1,h2,h3,h4,h5,h6,strong,b,i,em,span[*],blockquote,ol,ul,li,a,br\\",\\n  \\/\\/paste_word_valid_elements: \\"div,h1,h2,h3,h4,h5,h6,strong,b,i,em,span,blockquote,ol,ul,li,a,br\\",\\n  elementpath: false\\n});","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"tinymce.init({\\n  selector: \\"#modx-resource-description\\",\\n  [[+commonTinyMCECode]]\\n  plugins: \\"contextmenu,charmap,paste,link,preview,code,insertdatetime\\",\\n  toolbar: \\"code | undo redo | newdocument | preview | styleselect | blockquote | bold | italic | bullist numlist | link unlink | charmap | insertdatetime\\",\\n  contextmenu: \\"link,code,styleselect\\",\\n  resize: true,\\n  forced_root_block: \'\',\\n  force_br_newlines: true,\\n  force_p_newlines: false,\\n  \\/\\/valid_elements: \\"div,h1,h2,h3,h4,h5,h6,strong,b,i,em,span[*],blockquote,ol,ul,li,a,br\\",\\n  \\/\\/paste_word_valid_elements: \\"div,h1,h2,h3,h4,h5,h6,strong,b,i,em,span,blockquote,ol,ul,li,a,br\\",\\n  elementpath: false\\n});"}',
        'guid' => 'ef93325b7a1ef8304e7e124aad9bbe5f',
        'native_key' => 4,
        'signature' => 'cf2a508f4b09e93b68d0dac299ba70ed',
      ),
      '21aa5d98d5f005aaeefde766c0b78674' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":5,"source":0,"property_preprocess":0,"name":"TinymceWrapperLinkList","description":"So you want to select a MODx resource from within TInyMCE, but don\'t want to write your own PHP snippet huh? Okay here is a cheat....watch out for JSON trailing commas. To use this with modxMagicHoverlink plugin change value to value: \'\\\\[\\\\[~[[+id]]\\\\]\\\\]\' .","editor_type":0,"category":0,"cache_type":0,"snippet":"[[-remove the pdoMenu dash prefix if you have pdoMenu installed]]\\n[[-pdoMenu?\\n  &context=`web`\\n  &parents=`39,5,9`\\n  &level=`100`\\n  &limit=`1000`\\n  &showHidden =`1`\\n  &showUnpublished =`1`\\n  &tplOuter=`@INLINE [[+wrapper]]`\\n  &tpl=`@INLINE {title: \\"[[+menutitle]]\\", value: \\"\\\\[\\\\[~[[+id]]\\\\]\\\\]\\"},`\\n  &tplParentRow=`@INLINE {title: \\"[[+menutitle]]\\", value: \\"\\\\[\\\\[~[[+id]]\\\\]\\\\]\\", menu:[ [[+wrapper]] ]},`\\n  &sortby=`menuindex`\\n  &sortdir=`ASC`\\n  &checkPermissions=`load,list,view`\\n]]","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"[[-remove the pdoMenu dash prefix if you have pdoMenu installed]]\\n[[-pdoMenu?\\n  &context=`web`\\n  &parents=`39,5,9`\\n  &level=`100`\\n  &limit=`1000`\\n  &showHidden =`1`\\n  &showUnpublished =`1`\\n  &tplOuter=`@INLINE [[+wrapper]]`\\n  &tpl=`@INLINE {title: \\"[[+menutitle]]\\", value: \\"\\\\[\\\\[~[[+id]]\\\\]\\\\]\\"},`\\n  &tplParentRow=`@INLINE {title: \\"[[+menutitle]]\\", value: \\"\\\\[\\\\[~[[+id]]\\\\]\\\\]\\", menu:[ [[+wrapper]] ]},`\\n  &sortby=`menuindex`\\n  &sortdir=`ASC`\\n  &checkPermissions=`load,list,view`\\n]]"}',
        'guid' => '9de3ce7c3b21ad3c6664f38929fe791a',
        'native_key' => 5,
        'signature' => 'fc098f357595bb380f070ef2249c36ca',
      ),
      '27b689bd18cabfa0338e2406ed5c35c2' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":6,"source":0,"property_preprocess":0,"name":"TinymceWrapperQuickUpdate","description":"TinyMCE for Quick Create\\/Update resources from Resource tree","editor_type":0,"category":0,"cache_type":0,"snippet":"tinymce.init({\\n  selector: quickyId, \\/\\/DO NOT TOUCH\\n  [[+commonTinyMCECode]]\\n  plugins: \\"autoresize,preview,paste,contextmenu,image,wordcount,fullscreen,code,link,charmap,searchreplace,textpattern,emoticons,insertdatetime\\",\\n  \\/\\/paste_word_valid_elements: \\"a,div,b,strong,i,em,h1,h2,h3,p,blockquote,ol,ul,pre\\",\\n  \\/\\/valid_elements: \\"iframe[*],object[*],audio[*],-span[!title|!class<test test2],a[href|target|class|rel|title|data-ajax|data-iframe],strong,b,-p[class<text-align-left?text-align-center?text-align-right],br,-h1[class|data-ajax|data-iframe],-h2[class|data-ajax|data-iframe],-h3[class|data-ajax|data-iframe],-img[!src|!alt|!class=round_img|data-ajax|data-iframe],em,-blockquote,pre[class],-ol,-ul,-li,-code[class]\\",\\n  \\/\\/valid_children: \\"-li[ul],-li[ol],-li[div],-strong[*],-em[*],-h1[*],-h2[*],-h3[*],-a[strong|em|h1|h2|h3|p|div],blockquote[p|ol|ul],pre[code],div[pre]\\",\\n  resize: true,\\n  autoresize_min_height: 100,\\n  toolbar: \\"preview fullscreen | code | undo redo | blockquote | bold | italic | aligncenter | bullist numlist | link unlink | image | styleselect\\",\\n  contextmenu: \\"fullscreen removeformat | link | image | code charmap searchreplace\\",\\n  setup: function(editor) {\\n    editor.on(\'keydown\', function(evt) { \\/\\/ctrl + s = Save \\n      if (evt.keyCode == 83 && evt.ctrlKey && !evt.shiftKey && !evt.altKey && !evt.metaKey) {\\n        evt.preventDefault();\\n        $(\'#\' + editor.id).parents(\'.modx-window\').find(\'button:contains(\\"Save\\")\').first().trigger(\\"click\\");\\n      }\\n      if (evt.keyCode == 27) { \\/\\/escape key = close or remove fullscreen\\n        evt.preventDefault();\\n        if ($(\'.mce-fullscreen\').length) {\\n          tinymce.activeEditor.execCommand(\\"mceFullscreen\\")\\n        } else {\\n          $(\'#\' + editor.id).parents(\'.modx-window\').find(\'button:contains(\\"Close\\")\').first().trigger(\\"click\\");\\n        }\\n      }\\n    });\\n    editor.on(\'mouseleave\', function(evt) { \\/\\/sync textarea with TinyMCE \\n      tinyMCE.activeEditor.save();\\n    });\\n    editor.on(\\"init\\", function() { \\/\\/float fullscreen link\\n      containerId = $(editor.getContainer()).attr(\\"id\\");\\n      $(\\"#\\" + containerId + \\" .mce-i-fullscreen\\").parent().parent().parent().parent().css(\\"float\\", \\"right\\");\\n    });\\n  }\\n});","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"tinymce.init({\\n  selector: quickyId, \\/\\/DO NOT TOUCH\\n  [[+commonTinyMCECode]]\\n  plugins: \\"autoresize,preview,paste,contextmenu,image,wordcount,fullscreen,code,link,charmap,searchreplace,textpattern,emoticons,insertdatetime\\",\\n  \\/\\/paste_word_valid_elements: \\"a,div,b,strong,i,em,h1,h2,h3,p,blockquote,ol,ul,pre\\",\\n  \\/\\/valid_elements: \\"iframe[*],object[*],audio[*],-span[!title|!class<test test2],a[href|target|class|rel|title|data-ajax|data-iframe],strong,b,-p[class<text-align-left?text-align-center?text-align-right],br,-h1[class|data-ajax|data-iframe],-h2[class|data-ajax|data-iframe],-h3[class|data-ajax|data-iframe],-img[!src|!alt|!class=round_img|data-ajax|data-iframe],em,-blockquote,pre[class],-ol,-ul,-li,-code[class]\\",\\n  \\/\\/valid_children: \\"-li[ul],-li[ol],-li[div],-strong[*],-em[*],-h1[*],-h2[*],-h3[*],-a[strong|em|h1|h2|h3|p|div],blockquote[p|ol|ul],pre[code],div[pre]\\",\\n  resize: true,\\n  autoresize_min_height: 100,\\n  toolbar: \\"preview fullscreen | code | undo redo | blockquote | bold | italic | aligncenter | bullist numlist | link unlink | image | styleselect\\",\\n  contextmenu: \\"fullscreen removeformat | link | image | code charmap searchreplace\\",\\n  setup: function(editor) {\\n    editor.on(\'keydown\', function(evt) { \\/\\/ctrl + s = Save \\n      if (evt.keyCode == 83 && evt.ctrlKey && !evt.shiftKey && !evt.altKey && !evt.metaKey) {\\n        evt.preventDefault();\\n        $(\'#\' + editor.id).parents(\'.modx-window\').find(\'button:contains(\\"Save\\")\').first().trigger(\\"click\\");\\n      }\\n      if (evt.keyCode == 27) { \\/\\/escape key = close or remove fullscreen\\n        evt.preventDefault();\\n        if ($(\'.mce-fullscreen\').length) {\\n          tinymce.activeEditor.execCommand(\\"mceFullscreen\\")\\n        } else {\\n          $(\'#\' + editor.id).parents(\'.modx-window\').find(\'button:contains(\\"Close\\")\').first().trigger(\\"click\\");\\n        }\\n      }\\n    });\\n    editor.on(\'mouseleave\', function(evt) { \\/\\/sync textarea with TinyMCE \\n      tinyMCE.activeEditor.save();\\n    });\\n    editor.on(\\"init\\", function() { \\/\\/float fullscreen link\\n      containerId = $(editor.getContainer()).attr(\\"id\\");\\n      $(\\"#\\" + containerId + \\" .mce-i-fullscreen\\").parent().parent().parent().parent().css(\\"float\\", \\"right\\");\\n    });\\n  }\\n});"}',
        'guid' => 'bf68c7757473e2c175b975476b071a41',
        'native_key' => 6,
        'signature' => 'f25b3924ec216916c829d1239cebf130',
      ),
      '5316b7bcffaaaab33e5f0f5ec18aa250' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":7,"source":0,"property_preprocess":0,"name":"TinymceWrapperCommonCode","description":"To save you some brainwidth put TinyMCE code here that repeats in your chunks. Trust me, it is easy to go crazy in this world.","editor_type":0,"category":0,"cache_type":0,"snippet":"skin_url: MODx.config.assets_url+\'components\\/tinymcewrapper\\/tinymceskins\\/modxPericles\',\\nlink_list:[\\n[[$TinymceWrapperLinkList]]\\n],\\nrelative_urls: false,\\nremove_script_host: false,\\ndocument_base_url: MODx.config.site_url,\\nlink_class_list: [\\n  {title: \'None\', value: \'\'},\\n  {title: \'prettyLink\', value: \'prettyLink\'},\\n  {title: \'colorBox\', value: \'colorBox\'}\\n],\\nimage_class_list: [\\n  {title: \'None\', value: \'\'},\\n  {title: \'prettyPhoto\', value: \'prettyPhoto\'},\\n  {title: \'colorBox\', value: \'colorBox\'}\\n],\\nimage_caption: true,\\nbrowser_spellcheck: true,\\ngecko_spellcheck: true,\\npaste_data_images: false,\\nmenubar: false,\\nstatusbar: false,\\nimage_advtab: true,\\nsetup: function(editor) {\\n  editor.on(\'keydown\', function(evt) { \\n    if (evt.keyCode == 83 && evt.ctrlKey && !evt.shiftKey && !evt.altKey && !evt.metaKey) {\\/\\/ctrl + s = save \\n      evt.preventDefault();\\n      $(\'#modx-abtn-save button\').trigger(\\"click\\");\\n    }\\n    if (evt.keyCode == 27) { \\/\\/escape key = remove fullscreen \\n      evt.preventDefault();\\n      if ($(\'.mce-fullscreen\').length) {\\n        tinymce.activeEditor.execCommand(\\"mceFullscreen\\")\\n      }\\n    }\\n  });\\n  editor.on(\\"init\\",function() { \\/\\/float fullscreen link\\n  containerId = $(editor.getContainer()).attr(\\"id\\");\\n   $(\\"#\\"+containerId+\\" .mce-i-fullscreen\\").parent().parent().parent().parent().css(\\"float\\",\\"right\\");\\n  });\\n},\\nexternal_plugins:{\\n  twAceEditor: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twAceEditor.js\\",\\n  \\/\\/ twCodeMirror: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twCodeMirror.js\\",\\n  \\/\\/ bubbleBar: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/tinymceBubbleBar.js\\",\\n  \\/\\/ twExoticMarkdownEditor: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twExoticMarkdownEditor.js\\",\\n  modxMagicHoverLink: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/modxMagicHoverLink.js\\",\\n  twPreCodeManager: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twPreCodeManager.js\\"\\n},\\nfile_browser_callback : autoFileBrowser,\\n\\/\\/leave trailing comma","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"skin_url: MODx.config.assets_url+\'components\\/tinymcewrapper\\/tinymceskins\\/modxPericles\',\\nlink_list:[\\n[[$TinymceWrapperLinkList]]\\n],\\nrelative_urls: false,\\nremove_script_host: false,\\ndocument_base_url: MODx.config.site_url,\\nlink_class_list: [\\n  {title: \'None\', value: \'\'},\\n  {title: \'prettyLink\', value: \'prettyLink\'},\\n  {title: \'colorBox\', value: \'colorBox\'}\\n],\\nimage_class_list: [\\n  {title: \'None\', value: \'\'},\\n  {title: \'prettyPhoto\', value: \'prettyPhoto\'},\\n  {title: \'colorBox\', value: \'colorBox\'}\\n],\\nimage_caption: true,\\nbrowser_spellcheck: true,\\ngecko_spellcheck: true,\\npaste_data_images: false,\\nmenubar: false,\\nstatusbar: false,\\nimage_advtab: true,\\nsetup: function(editor) {\\n  editor.on(\'keydown\', function(evt) { \\n    if (evt.keyCode == 83 && evt.ctrlKey && !evt.shiftKey && !evt.altKey && !evt.metaKey) {\\/\\/ctrl + s = save \\n      evt.preventDefault();\\n      $(\'#modx-abtn-save button\').trigger(\\"click\\");\\n    }\\n    if (evt.keyCode == 27) { \\/\\/escape key = remove fullscreen \\n      evt.preventDefault();\\n      if ($(\'.mce-fullscreen\').length) {\\n        tinymce.activeEditor.execCommand(\\"mceFullscreen\\")\\n      }\\n    }\\n  });\\n  editor.on(\\"init\\",function() { \\/\\/float fullscreen link\\n  containerId = $(editor.getContainer()).attr(\\"id\\");\\n   $(\\"#\\"+containerId+\\" .mce-i-fullscreen\\").parent().parent().parent().parent().css(\\"float\\",\\"right\\");\\n  });\\n},\\nexternal_plugins:{\\n  twAceEditor: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twAceEditor.js\\",\\n  \\/\\/ twCodeMirror: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twCodeMirror.js\\",\\n  \\/\\/ bubbleBar: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/tinymceBubbleBar.js\\",\\n  \\/\\/ twExoticMarkdownEditor: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twExoticMarkdownEditor.js\\",\\n  modxMagicHoverLink: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/modxMagicHoverLink.js\\",\\n  twPreCodeManager: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twPreCodeManager.js\\"\\n},\\nfile_browser_callback : autoFileBrowser,\\n\\/\\/leave trailing comma"}',
        'guid' => '506ae6bbae0bd7c0c69d7290181a562e',
        'native_key' => 7,
        'signature' => '55a8dedae31531dee8218ea19179607c',
      ),
      'a51703e3bfe08258654ce6dcf39d4eaa' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":8,"source":0,"property_preprocess":0,"name":"TinymceWrapperCodeMirror","description":"A simple chunk to teach you how to totally dominate the usage of CodeMirror according to all the possible specs provided on the official website","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/*\\n#######################################################\\nTinymceWrapperCodeMirror is a chunk to let any whoever dominate the initialization of the powerful CodeMirror code editor.\\nThis tiny config can work any where and with anything in MODX.\\nIt will sync with TinyMCE if TinyMCE RTE is detected\\n\\nYours truly, donshakespeare @ MODX forums\\n#######################################################\\n\\n##Language \\/ Mode \\/ Syntax\\n\\"mode\\": \\"html\\",\\n\\"mode\\": \\"auto\\/html\\",\\n  -- (elements) static source extension dependent - fallback to html\\n  -- (resources) content type (mimetype) dependent - fallsback to html\\n\\n##max-height of editor in pixels\\n\\"maxHeight\\": pure integer \\/ \\"textarea\\" \\/ \\"Infinity\\",\\n  -- integer - e.g 100 (will make height 100px)\\n  -- \\"textarea\\" - editor will borrow the fixed height of its original MODX textarea and will auto overflow\\n  -- \\"Infiinity\\" - editor will keep growing according to the height of its content.\\n*\\/\\n\\n\\ncodeMirrorTextareasIDorCLASS = [\\n  {\\n    \\"name\\": \\"introtext\\",\\n    \\"selector\\": \\"#modx-resource-introtext\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"textarea\\",\\n  },\\n  {\\n    \\"name\\": \\"description\\",\\n    \\"selector\\": \\"#modx-resource-description\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"textarea\\"\\n  },\\n  {\\n    \\"name\\": \\"richtext\\",\\n    \\"selector\\": \\".modx-richtext\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": 200,\\n  },\\n  {\\n    \\"name\\": \\"resource_content\\",\\n    \\"selector\\": \\"#ta\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"chunk\\",\\n    \\"selector\\": \\"#modx-chunk-snippet\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"template\\",\\n    \\"selector\\": \\"#modx-template-content\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"snippet\\",\\n    \\"selector\\": \\"#modx-snippet-snippet\\",\\n    \\"mode\\": \\"auto\\/php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"plugin\\",\\n    \\"selector\\": \\"#modx-plugin-plugincode\\",\\n    \\"mode\\": \\"auto\\/php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"file\\",\\n    \\"selector\\": \\"#modx-file-content\\",\\n    \\"mode\\": \\"auto\\/css\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  }\\n];\\n\\n\\/\\/ all on-the-fly textareas attached to mouseenter event (e.g Quick update\\/create textareas)\\ncodeMirrorFlyTextareasIDorCLASS = [\\n  {\\n    \\"selector\\": \\"textarea[name=snippet]\\",\\n    \\"mode\\": \\"php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  }, {\\n    \\"selector\\": \\"textarea[name=content]\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  }, {\\n    \\"selector\\": \\"textarea[name=plugincode]\\",\\n    \\"mode\\": \\"php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  }\\n];\\n\\n\\/\\/extend if you like\\nmodxCodeMirrorMimeTypes = {\\n  \'text\\/html\': \'html\',\\n  \'text\\/plain\': \'text\',\\n  \'text\\/css\': \'css\',\\n  \'text\\/javascript\': \'javascript\',\\n  \'application\\/javascript\': \'javascript\',\\n  \'text\\/x-less\': \'less\',\\n  \'application\\/xml\': \'xml\',\\n  \'text\\/xml\': \'xml\',\\n  \'application\\/json\': \'json\',\\n  \'text\\/x-markdown\': \'markdown\'\\n};\\n\\n\\n\\/\\/ actual CodeMirror Init configuration (get all from official CodeMirror site, oh yea - total freedom!!!)\\ncodeMirrorInnerInit = function(mode, theme, maxLines, wrap) {\\n  var viewportMargin = viewportMargin ? viewportMargin : Infinity;\\n  var inner = {\\n      mode: mode,\\n      [[+CodeMirrorTHEME:notempty=`theme: \\"[[+CodeMirrorTHEME]]\\",`]]\\n      indentOnInit: true,\\n      lineNumbers: true,\\n      lineWrapping: true,\\n      foldGutter: true,\\n      gutters: [\\"CodeMirror-linenumbers\\", \\"CodeMirror-foldgutter\\"],\\n      indentUnit: 1,\\n      tabSize: 1,\\n      matchBrackets: true,\\n      styleActiveLine: true,\\n      autoCloseTags: true,\\n      showTrailingSpace: true,\\n      viewportMargin: viewportMargin,\\n      extraKeys: {\\n        \\"Ctrl-Space\\": \\"autocomplete\\",\\n        \\"Alt-F\\": \\"findPersistent\\",\\n        \\"F11\\": function(cm) {\\n          cm.setOption(\\"fullScreen\\", !cm.getOption(\\"fullScreen\\"));\\n        },\\n        \\"Esc\\": function(cm) {\\n          if (cm.getOption(\\"fullScreen\\")) cm.setOption(\\"fullScreen\\", false);\\n        },\\n        \\"Ctrl-Q\\": function(cm){\\n          cm.foldCode(cm.getCursor());\\n         }\\n      }\\n    }\\n  return inner;\\n};\\n\\n\\/*#######################################################################################\\n************************** abandon all fear - all ye who enter **************************\\n#######################################################################################*\\/\\n\\nmodxCodeMirrorInit = function (elem, mode, spec, maxLines, wrap, realFly){\\n  var originalTextarea = document.getElementById(elem);\\n  var maxHeightCodeMirror = maxLines;\\n  originalTextarea.style.display  = \\"none\\";\\n  if(isNaN(maxHeightCodeMirror)){\\n    var height = $(originalTextarea).height();\\n  }\\n  else{\\n    if(maxHeightCodeMirror == \\"Infinity\\"){\\n      var height = \\"auto\\";\\n    }\\n    else{\\n      var height = maxHeightCodeMirror;\\n    }\\n  }\\n  var spanMode = mode;\\n  if(mode == \\"null\\" || !mode){\\n    var mode = \\"null\\";\\n    var spanMode = \\"text\\/plain\\";\\n  }\\n  if(mode == \\"html\\" || mode == \\"htm\\"){\\n    var mode = \\"htmlmixed\\";\\n    var spec = \\"text\\/html\\";\\n  }\\n  var codeMirrorTempDiv =\\n    $(\'<div>\', {\\n      \'id\': \'codeMirror_wrapper_\'+originalTextarea.id,\\n      \'class\': \'codeMirror_wrapper_modx \'+realFly,\\n      \'data-codemirror\': \'codeMirror_id_\'+originalTextarea.id,\\n      \'data-origin\': originalTextarea.id,\\n      \'data-mode\': mode,\\n      \'data-maxL\': maxLines,\\n      \'data-wrap\': wrap\\n    }).prepend(\\n      $(\'<span>\', {\\n        \'class\': \'codeMirrorKitchenSink\',\\n        \'text\': spanMode,\\n        \'title\': \'maxLine: \'+maxLines+\'... wrap: \'+wrap\\n      }),\\n      $(\'<textarea>\', {\\n        \'id\': \'codeMirror_id_\'+originalTextarea.id,\\n        \'width\': \\"auto\\",\\n        \'height\': height ? height : \\"\\",\\n        \'data-origin\': originalTextarea.id\\n      })\\n    ).hide().insertBefore(originalTextarea);\\n\\n  window[\\"codeMirror_id_\\" + originalTextarea.id] = CodeMirror.fromTextArea(document.getElementById(\'codeMirror_id_\'+originalTextarea.id), codeMirrorInnerInit(spec));\\n  \\/\\/ if(mode == \\"htmlmixed\\"){\\n    \\/\\/ window[\\"codeMirror_id_\\" + originalTextarea.id].setOption(\\"profile\\",\\"xhtml\\");\\n    emmetCodeMirror(window[\\"codeMirror_id_\\" + originalTextarea.id]);\\n  \\/\\/ }\\n  CodeMirror.autoLoadMode(window[\\"codeMirror_id_\\" + originalTextarea.id], mode);\\n  window[\\"codeMirror_id_\\" + originalTextarea.id].setValue(originalTextarea.value);\\n  $(\'#codeMirror_wrapper_\'+originalTextarea.id).delay(100).fadeIn();\\n  $(\'#codeMirror_wrapper_\'+originalTextarea.id).find(\\".CodeMirror\\").css(\\"height\\",height)\\n  setTimeout(function(){\\n    window[\\"codeMirror_id_\\" + originalTextarea.id].refresh();\\n  },250)\\n  codeMirrorSetContentsilentMODX = false;\\n  window[\\"codeMirror_id_\\" + originalTextarea.id].on(\\"focus\\", function() {\\n    if(typeof tinymce !== \\"undefined\\" && tinymce.get(elem)){\\n      tinymce.get(elem).on(\\"keyup change\\", function() {\\n        if($(\\"#codeMirror_id_\\"+originalTextarea.id).length){\\n          codeMirrorSetContentsilentMODX = true;\\n          window[\\"codeMirror_id_\\" + originalTextarea.id].setValue(tinymce.get(elem).getContent());\\n          codeMirrorSetContentsilentMODX = false;\\n        }\\n      })\\n    }\\n  })\\n  window[\\"codeMirror_id_\\" + originalTextarea.id].on(\\"change\\", function() {\\n    if (codeMirrorSetContentsilentMODX){\\n      return;\\n    }\\n    else{\\n      originalTextarea.value = window[\\"codeMirror_id_\\" + originalTextarea.id].getValue();\\n      if(typeof tinymce !== \\"undefined\\" && tinymce.get(elem)){\\n        tinymce.get(elem).setContent(window[\\"codeMirror_id_\\" + originalTextarea.id].getValue());\\n      }\\n    }\\n  })\\n  $(originalTextarea).parents(\\".modx-tv\\").find(\\".modx-tv-reset\\").on(\\"click\\", function(){\\n    setTimeout(function(){\\n      window[\\"codeMirror_id_\\" + originalTextarea.id].setValue(originalTextarea.value);\\n    },200)\\n  });\\n  $(originalTextarea).on(\\"keyup change\\", function() {\\n    codeMirrorSetContentsilentMODX = true;\\n    window[\\"codeMirror_id_\\" + originalTextarea.id].setValue($(this).val());\\n    codeMirrorSetContentsilentMODX = false;\\n   })\\n}\\nfunction changeMyButton(thisButton,id,mode,spec,maxLines,wrap,realFly){\\n  if($(thisButton).hasClass(\\"codeMirrorActive\\")){\\n    if($(\\"#\\"+id).is(\':visible\') ){\\n      $(thisButton).find(\\"button\\").text(\\"Remove CodeMirror\\");\\n      $(thisButton).removeClass(\\"codeMirrorActive\\");\\n      modxCodeMirrorInit(id,mode,spec,maxLines,wrap,realFly)\\n    }\\n  }\\n  else{\\n    $(thisButton).addClass(\\"codeMirrorActive\\");\\n    $(thisButton).find(\\"button\\").text(\\"Edit With CodeMirror\\");\\n    var thisCodeMirrorId = $(thisButton).parents(\\".modx-window\\").find(\\".codeMirror_wrapper_modx\\").data(\\"codemirror\\");\\n    window[thisCodeMirrorId].toTextArea();\\n    $(\\"#codeMirror_wrapper_\\"+id).remove();\\n    $(\\"#\\"+id).fadeIn();\\n  }\\n}\\n\\nfunction splitMyJoint(val,joint,index) {\\n  var item = val.split(joint);\\n  return item[index];\\n}\\n\\nfunction getCodeMirrorCredential() {\\n  var thisWrap = $(\\"#codeMirrorMoreSuperOptions_wrapper\\").parent();\\n  var thisSink = thisWrap.find(\\".codeMirrorKitchenSink\\");\\n  var thisActualCodeMirror = thisWrap.find(\\".CodeMirror\\");\\n  var originalTextareaId = thisWrap.data(\\"origin\\");\\n  var thisCodeMirrorId = thisWrap.data(\\"codemirror\\");\\n  return {\\n      thisWrap: thisWrap,\\n      thisSink: thisSink,\\n      originalTextareaId: originalTextareaId,\\n      thisCodeMirrorId: thisCodeMirrorId,\\n      thisActualCodeMirror: thisActualCodeMirror\\n    }\\n}\\n\\nfunction autoDetectMode(filePathOrModeOrMime) {\\n  var val = filePathOrModeOrMime, m, mode, spec;\\n  if (m = \\/.+\\\\.([^.]+)$\\/.exec(val)) {\\n    var info = CodeMirror.findModeByExtension(m[1]);\\n    if (info) {\\n      mode = info.mode;\\n      spec = info.mime;\\n    }\\n  }\\n  else if (\\/\\\\\\/\\/.test(val)) {\\n    var info = CodeMirror.findModeByMIME(val);\\n    if (info) {\\n      mode = info.mode;\\n      spec = val;\\n    }\\n  }\\n  else {\\n    mode = spec = val;\\n  }\\n  return {\\n    mode: mode,\\n    spec: spec\\n  };\\n}\\n\\nfunction codeMirrorTextareas(){\\n  var mainCSScodeMirror = \'<style id=mainCSScodeMirror>.x-tab-panel,.x-window-body{overflow-x:hidden!important}#codeMirrorMoreSuperOptions_wrapper{position:absolute!important;z-index:9!important;right:10px;top:-20px}#codeMirrorMoreSuperOptions_wrapper .mce-listbox button{padding-right:10px!important}#codeMirrorMoreSuperOptions_wrapper .mce-btn-has-text .mce-ico{padding-right:0!important}#codeMirrorMoreSuperOptions_wrapper.codeMirror_editor_fullScreen{position:fixed!important;right:23px}#codeMirrorMoreSuperOptions_wrapper_boss{float:right;cursor:pointer}#codeMirrorMoreSuperOptions_wrapper_boss button{padding:0}#codeMirrorMoreSuperOptions_wrapper_sub{margin-top:24px}.codeMirror_wrapper_modx.codeMirror_editor_fullScreen{position:fixed;top:0;width:100%;height:100%;left:0;right:0;bottom:0;z-index:26;background:#fff;overflow:auto}.codeMirrorKitchenSink{position:absolute;background: #fff;color: #000;padding: 0px 6px;border-radius: 8px 0 8px 0;top: -20px;right:30px;z-index:9;font-size:12px;font-weight:bold;border:1px solid #808080;font-style:italic;}.twCodeMirrorParent .CodeMirror{height:auto}<\\/style>\';\\n  if(!$(\\"head #mainCSScodeMirror\\").length){\\n    $(\'head\').append(mainCSScodeMirror);\\n  }\\n  \\/\\/all textareas ... that are present on page load\\n  $.each(codeMirrorTextareasIDorCLASS, function() {\\n    if($(this.selector).length){\\n      $(this.selector).parent().addClass(\\"twCodeMirrorParent\\");\\n      var twCodeMirrorRealOrFly = \\"twCodeMirrorReal\\";\\n      var elemCodeMirror = $(this.selector);\\n      var ext = \\"test.\\"+this.mode;\\n      var mode = autoDetectMode(ext).mode;\\n      var spec = autoDetectMode(ext).spec;\\n      var height = this.maxHeight;\\n      var wrap = this.wrap;\\n      if(this.name == \\"resource_content\\" && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var mode = autoDetectMode(\\"test.\\"+splitMyJoint(this.mode,\\"\\/\\",1)).mode;\\n        var spec = autoDetectMode(\\"test.\\"+splitMyJoint(this.mode,\\"\\/\\",1)).spec;\\n        if(typeof twGetResourceContentType !== \\"undefined\\" && twGetResourceContentType !== \\"\\"){\\n          var mode = autoDetectMode(twGetResourceContentType).mode; \\/\\/autoDetectMode value is supplied by serverside plugin\\n          var spec = autoDetectMode(twGetResourceContentType).spec;\\n        }\\n      }\\n      else if((this.name == \\"chunk\\" || this.name == \\"snippet\\" || this.name == \\"plugin\\" || this.name == \\"template\\") && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var mode = splitMyJoint(this.mode,\\"\\/\\",1);\\n        if($(\\"#modx-\\"+this.name+\\"-static-file\\").length && $(\\"#modx-\\"+this.name+\\"-static-file\\").val() !== \\"\\"){\\n          var filePath = $(\\"#modx-\\"+this.name+\\"-static-file\\").val();\\n          var mode = autoDetectMode(filePath).mode;\\n          var spec = autoDetectMode(filePath).spec;\\n        }\\n      }\\n      else if(this.name == \\"file\\" && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var filePath = $(\\"#modx-file-name\\").val();\\n        var mode = autoDetectMode(filePath).mode;\\n        var spec = autoDetectMode(filePath).spec;\\n      }\\n      $(this.selector).each(function(){ \\/\\/ for the sake of .modx-richtext and other classnames provided\\n        var elemCodeMirrorId = $(this).attr(\\"id\\");\\n        modxCodeMirrorInit(elemCodeMirrorId,mode,spec,height,wrap,twCodeMirrorRealOrFly);\\n      })\\n    }\\n  });\\n\\n  \\/\\/all textareas added dynamically to the DOM ... quick create\\/update and anything else\\n  $(document).on(\\"mouseenter\\", \\".modx-window\\", function () {\\n    $this = $(this);\\n    $.each(codeMirrorFlyTextareasIDorCLASS, function() {\\n      if($this.find(this.selector).length){\\n        var thisTextarea = $this.find(this.selector);\\n        thisTextarea.parent().addClass(\\"twCodeMirrorParent\\");\\n        twElemCodeMirrorId = thisTextarea.attr(\\"id\\");\\n        twCodeMirrorMode = autoDetectMode(this.mode).mode;\\n        twCodeMirrorSpec = autoDetectMode(this.mode).spec;\\n        twCodeMirrorRealOrFly = \\"twCodeMirrorQuickFly\\";\\n        if($this.find(\\"input[name=path]\\").length){ \\/\\/ for quick edit existing files\\n          twCodeMirrorMode = $this.find(\\"input[name=path]\\").val()\\n          twCodeMirrorMode = autoDetectMode(twCodeMirrorMode).mode;\\n          twCodeMirrorSpec = autoDetectMode(twCodeMirrorMode).spec;\\n        }\\n        twCodeMirrorHeight = this.maxHeight;\\n        twCodeMirrorWrap = this.wrap;\\n        if(thisTextarea.is(\':visible\') && $this.find(\\"#codeMirror_wrapper_\\"+twElemCodeMirrorId).length < 1 && !$this.find(\\".tinyCM\\").length){\\n        \\/\\/ modxCodeMirrorInit(twElemCodeMirrorId,twCodeMirrorMode,twCodeMirrorSpec,twCodeMirrorHeight,twCodeMirrorWrap,twCodeMirrorRealOrFly) \\/\\/ to fire this automatically, comment the bellow\\n          $this.find(\\".x-toolbar-left-row\\").append(\\"<p onclick=changeMyButton(this,twElemCodeMirrorId,twCodeMirrorMode,twCodeMirrorSpec,twCodeMirrorHeight,twCodeMirrorWrap,twCodeMirrorRealOrFly); class=\\\\\'tinyCM codeMirrorActive x-btn x-btn-small x-btn-icon-small-left x-btn-noicon\\\\\' unselectable=\\\\\'on\\\\\'><em><button class=\\\\\'x-btn-text\\\\\'>Edit with CodeMirror<\\/button><\\/em><\\/p>\\");\\n        }\\n      }\\n    });\\n  });\\n  if (typeof codeMirrorMoreSuperOptions == \'function\') { \\n    codeMirrorMoreSuperOptions();\\n  }\\n}\\n\\n\\/*#######################################################################################\\n     *********** Begin Kitchen Sink  (plcodeMirror in chunk or external file ***********\\n#######################################################################################*\\/\\n\\/\\/ font size \\/ themes \\/ height etc\\nfunction setCodeMirrorTheme(){\\n  var theme = this.text();\\n  var link = document.createElement(\'link\');\\n  link.onload = function(){\\n      window[getCodeMirrorCredential().thisCodeMirrorId].setOption(\\"theme\\", theme);\\n  };\\n  link.rel = \\"stylesheet\\";\\n  link.media = \\"all\\";\\n  link.href = \\"[[+CodeMirrorSrc]]theme\\/\\"+theme+\\".css\\";\\n  document.getElementsByTagName(\'head\')[0].appendChild(link);\\n}\\n\\/\\/ kitchen sink\\nfunction setCodeMirrorSetFont(){\\n  getCodeMirrorCredential().thisActualCodeMirror.css(\\"font-size\\",this.text());\\n  window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n}\\n\\/\\/ kitchen sink\\nfunction setCodeMirrorSetWrap(){\\n  if(this.text() == \\"free\\"){\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(\\"\\", \\"\\");\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n  else{\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(+this.text()+290, \\"\\");\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n}\\n\\/\\/ kitchen sink\\nfunction setCodeMirrorSetHeight(){\\n  var thisTextarea = getCodeMirrorCredential().originalTextareaId;\\n  var option = this.text();\\n  if(option == \\"Textarea\\"){\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(\\"\\", $(\\"#\\"+thisTextarea).height());\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n  else if(option == \\"1\\"){\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(\\"\\", 40);\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n  else if(option == \\"10\\"){\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(\\"\\", 200);\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n  else {\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(\\"\\", \\"\\");\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n}\\n\\n\\n\\/\\/ kitchen sink\\n\\/\\/ mode \\/ syntax \\/ language -- add as many as you like\\ncodeMirrorMoreSuperOptionsToolButtonMODE =[\\n  {text: \'--- MOST COMMON ---\', value: \'\', disabled: true, selected: false, active: false},\\n  {text: \'HTML\', value: \'htmlmixed\'},\\n  {text: \'Markdown\', value: \'markdown\'},\\n  {text: \'CSS\', value: \'css\'},\\n  {text: \'PHP\', value: \'php\'},\\n  {text: \'JavaScript\', value: \'javascript\'},\\n  {text: \'JSON\', value: \'javascript\'},\\n  {text: \'Text\', value: \'null\'},\\n  {text: \'LESS\', value: \'css\'},\\n  {text: \'SASS\', value: \'sass\'},\\n  {text: \'SCSS\', value: \'css\'},\\n  {text: \'--- ALL SYNTAX ---\', value: \'\', disabled: true, selected: false, active: false},\\n  {text: \'APL\', value: \'apl\'},\\n  {text: \'PGP\', value: \'asciiarmor\'},\\n  {text: \'ASN.1\', value: \'asn.1\'},\\n  {text: \'Asterisk\', value: \'asterisk\'},\\n  {text: \'Brainfuck\', value: \'brainfuck\'},\\n  {text: \'C\', value: \'clike\'},\\n  {text: \'C++\', value: \'clike\'},\\n  {text: \'Cobol\', value: \'cobol\'},\\n  {text: \'C#\', value: \'clike\'},\\n  {text: \'Clojure\', value: \'clojure\'},\\n  {text: \'ClojureScript\', value: \'clojure\'},\\n  {text: \'Closure Stylesheets (GSS)\', value: \'css\'},\\n  {text: \'CMake\', value: \'cmake\'},\\n  {text: \'CoffeeScript\', value: \'coffeescript\'},\\n  {text: \'Common Lisp\', value: \'commonlisp\'},\\n  {text: \'Cypher\', value: \'cypher\'},\\n  {text: \'Cython\', value: \'python\'},\\n  {text: \'Crystal\', value: \'crystal\'},\\n  {text: \'CSS\', value: \'css\'},\\n  {text: \'CQL\', value: \'sql\'},\\n  {text: \'D\', value: \'d\'},\\n  {text: \'Dart\', value: \'dart\'},\\n  {text: \'diff\', value: \'diff\'},\\n  {text: \'Django\', value: \'django\'},\\n  {text: \'Dockerfile\', value: \'dockerfile\'},\\n  {text: \'DTD\', value: \'dtd\'},\\n  {text: \'Dylan\', value: \'dylan\'},\\n  {text: \'EBNF\', value: \'ebnf\'},\\n  {text: \'ECL\', value: \'ecl\'},\\n  {text: \'edn\', value: \'clojure\'},\\n  {text: \'Eiffel\', value: \'eiffel\'},\\n  {text: \'Elm\', value: \'elm\'},\\n  {text: \'Embedded Javascript\', value: \'htmlembedded\'},\\n  {text: \'Embedded Ruby\', value: \'htmlembedded\'},\\n  {text: \'Erlang\', value: \'erlang\'},\\n  {text: \'Factor\', value: \'factor\'},\\n  {text: \'FCL\', value: \'fcl\'},\\n  {text: \'Forth\', value: \'forth\'},\\n  {text: \'Fortran\', value: \'fortran\'},\\n  {text: \'F#\', value: \'mllike\'},\\n  {text: \'Gas\', value: \'gas\'},\\n  {text: \'Gherkin\', value: \'gherkin\'},\\n  {text: \'GitHub Flavored Markdown\', value: \'gfm\'},\\n  {text: \'Go\', value: \'go\'},\\n  {text: \'Groovy\', value: \'groovy\'},\\n  {text: \'HAML\', value: \'haml\'},\\n  {text: \'Haskell\', value: \'haskell\'},\\n  {text: \'Haskell (Literate)\', value: \'haskell-literate\'},\\n  {text: \'Haxe\', value: \'haxe\'},\\n  {text: \'HXML\', value: \'haxe\'},\\n  {text: \'ASP.NET\', value: \'htmlembedded\'},\\n  {text: \'HTML\', value: \'htmlmixed\'},\\n  {text: \'HTTP\', value: \'http\'},\\n  {text: \'IDL\', value: \'idl\'},\\n  {text: \'Jade\', value: \'jade\'},\\n  {text: \'Java\', value: \'clike\'},\\n  {text: \'Java Server Pages\', value: \'htmlembedded\'},\\n  {name: \'JavaScript\', value: \'javascript\'},\\n  {text: \'JSON\', value: \'javascript\'},\\n  {text: \'JSON-LD\', value: \'javascript\'},\\n  {text: \'JSX\', value: \'jsx\'},\\n  {text: \'Jinja2\', value: \'jinja2\'},\\n  {text: \'Julia\', value: \'julia\'},\\n  {text: \'Kotlin\', value: \'clike\'},\\n  {text: \'LESS\', value: \'css\'},\\n  {text: \'LiveScript\', value: \'livescript\'},\\n  {text: \'Lua\', value: \'lua\'},\\n  {text: \'Markdown\', value: \'markdown\'},\\n  {text: \'mIRC\', value: \'mirc\'},\\n  {text: \'MariaDB SQL\', value: \'sql\'},\\n  {text: \'Mathematica\', value: \'mathematica\'},\\n  {text: \'Modelica\', value: \'modelica\'},\\n  {text: \'MUMPS\', value: \'mumps\'},\\n  {text: \'MS SQL\', value: \'sql\'},\\n  {text: \'MySQL\', value: \'sql\'},\\n  {text: \'Nginx\', value: \'nginx\'},\\n  {text: \'NSIS\', value: \'nsis\'},\\n  {text: \'NTriples\', value: \'ntriples\'},\\n  {text: \'Objective C\', value: \'clike\'},\\n  {text: \'OCaml\', value: \'mllike\'},\\n  {text: \'Octave\', value: \'octave\'},\\n  {text: \'Oz\', value: \'oz\'},\\n  {text: \'Pascal\', value: \'pascal\'},\\n  {text: \'PEG.js\', value: \'pegjs\'},\\n  {text: \'Perl\', value: \'perl\'},\\n  {text: \'PHP\', value: \'php\'},\\n  {text: \'Pig\', value: \'pig\'},\\n  {text: \'Plain Text\', value: \'null\'},\\n  {text: \'PLSQL\', value: \'sql\'},\\n  {text: \'PowerShell\', value: \'powershell\'},\\n  {text: \'Properties files\', value: \'properties\'},\\n  {text: \'ProtoBuf\', value: \'protobuf\'},\\n  {text: \'Python\', value: \'python\'},\\n  {text: \'Puppet\', value: \'puppet\'},\\n  {text: \'Q\', value: \'q\'},\\n  {text: \'R\', value: \'r\'},\\n  {text: \'reStructuredText\', value: \'rst\'},\\n  {text: \'RPM Changes\', value: \'rpm\'},\\n  {text: \'RPM Spec\', value: \'rpm\'},\\n  {text: \'Ruby\', value: \'ruby\'},\\n  {text: \'Rust\', value: \'rust\'},\\n  {text: \'SAS\', value: \'sas\'},\\n  {text: \'Sass\', value: \'sass\'},\\n  {text: \'Scala\', value: \'clike\'},\\n  {text: \'Scheme\', value: \'scheme\'},\\n  {text: \'SCSS\', value: \'css\'},\\n  {text: \'Shell\', value: \'shell\'},\\n  {text: \'Sieve\', value: \'sieve\'},\\n  {text: \'Slim\', value: \'slim\'},\\n  {text: \'Smalltalk\', value: \'smalltalk\'},\\n  {text: \'Smarty\', value: \'smarty\'},\\n  {text: \'Solr\', value: \'solr\'},\\n  {text: \'Soy\', value: \'soy\'},\\n  {text: \'SPARQL\', value: \'sparql\'},\\n  {text: \'Spreadsheet\', value: \'spreadsheet\', alias: [\'excel\', \'formula\']},\\n  {text: \'SQL\', value: \'sql\'},\\n  {text: \'Squirrel\', value: \'clike\'},\\n  {text: \'Swift\', value: \'swift\'},\\n  {text: \'sTeX\', value: \'stex\'},\\n  {text: \'LaTeX\', value: \'stex\'},\\n  {text: \'SystemVerilog\', value: \'verilog\'},\\n  {text: \'Tcl\', value: \'tcl\'},\\n  {text: \'Textile\', value: \'textile\'},\\n  {text: \'TiddlyWiki \', value: \'tiddlywiki\'},\\n  {text: \'Tiki wiki\', value: \'tiki\'},\\n  {text: \'TOML\', value: \'toml\'},\\n  {text: \'Tornado\', value: \'tornado\'},\\n  {text: \'troff\', value: \'troff\'},\\n  {text: \'TTCN\', value: \'ttcn\'},\\n  {text: \'TTCN_CFG\', value: \'ttcn-cfg\'},\\n  {text: \'Turtle\', value: \'turtle\'},\\n  {text: \'TypeScript\', value: \'javascript\'},\\n  {text: \'Twig\', value: \'twig\'},\\n  {text: \'Web IDL\', value: \'webidl\'},\\n  {text: \'VB.NET\', value: \'vb\'},\\n  {text: \'VBScript\', value: \'vbscript\'},\\n  {text: \'Velocity\', value: \'velocity\'},\\n  {text: \'Verilog\', value: \'verilog\'},\\n  {text: \'VHDL\', value: \'vhdl\'},\\n  {text: \'XML\', value: \'xml\'},\\n  {text: \'XQuery\', value: \'xquery\'},\\n  {text: \'Yacas\', value: \'yacas\'},\\n  {text: \'YAML\', value: \'yaml\'},\\n  {text: \'Z80\', value: \'z80\'},\\n  {text: \'mscgen\', value: \'mscgen\'},\\n  {text: \'xu\', value: \'mscgen\'},\\n  {text: \'msgenny\', value: \'mscgen\'}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change font size on the fly\\ncodeMirrorMoreSuperOptionsToolButtonFONT =[\\n  {text: \'10px\', onclick: setCodeMirrorSetFont},\\n  {text: \'11px\', onclick: setCodeMirrorSetFont},\\n  {text: \'12px\', onclick: setCodeMirrorSetFont},\\n  {text: \'13px\', onclick: setCodeMirrorSetFont},\\n  {text: \'14px\', onclick: setCodeMirrorSetFont},\\n  {text: \'15px\', onclick: setCodeMirrorSetFont},\\n  {text: \'16px\', onclick: setCodeMirrorSetFont},\\n  {text: \'18px\', onclick: setCodeMirrorSetFont},\\n  {text: \'20px\', onclick: setCodeMirrorSetFont},\\n  {text: \'24px\', onclick: setCodeMirrorSetFont}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change wrap style\\ncodeMirrorMoreSuperOptionsToolButtonWRAP =[\\n  {text: \'free\', onclick: setCodeMirrorSetWrap},\\n  {text: \'40\', onclick: setCodeMirrorSetWrap},\\n  {text: \'180\', onclick: setCodeMirrorSetWrap}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change height\\/max lines\\ncodeMirrorMoreSuperOptionsToolButtonHEIGHT =[\\n  {text: \'1\', onclick: setCodeMirrorSetHeight},\\n  {text: \'10\', onclick: setCodeMirrorSetHeight},\\n  {text: \'Infinity\', onclick: setCodeMirrorSetHeight},\\n  {text: \'Textarea\', onclick: setCodeMirrorSetHeight}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change theme on the fly\\ncodeMirrorMoreSuperOptionsToolButtonTHEME = [\\n  {text: \'3024-day\', onclick: setCodeMirrorTheme},\\n  {text: \'3024-night\', onclick: setCodeMirrorTheme},\\n  {text: \'abcdef\', onclick: setCodeMirrorTheme},\\n  {text: \'ambiance\', onclick: setCodeMirrorTheme},\\n  {text: \'base16-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'base16-light\', onclick: setCodeMirrorTheme},\\n  {text: \'bespin\', onclick: setCodeMirrorTheme},\\n  {text: \'blackboard\', onclick: setCodeMirrorTheme},\\n  {text: \'cobalt\', onclick: setCodeMirrorTheme},\\n  {text: \'colorforth\', onclick: setCodeMirrorTheme},\\n  {text: \'dracula\', onclick: setCodeMirrorTheme},\\n  {text: \'eclipse\', onclick: setCodeMirrorTheme},\\n  {text: \'elegant\', onclick: setCodeMirrorTheme},\\n  {text: \'erlang-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'hopscotch\', onclick: setCodeMirrorTheme},\\n  {text: \'icecoder\', onclick: setCodeMirrorTheme},\\n  {text: \'isotope\', onclick: setCodeMirrorTheme},\\n  {text: \'lesser-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'liquibyte\', onclick: setCodeMirrorTheme},\\n  {text: \'material\', onclick: setCodeMirrorTheme},\\n  {text: \'mbo\', onclick: setCodeMirrorTheme},\\n  {text: \'mdn-like\', onclick: setCodeMirrorTheme},\\n  {text: \'midnight\', onclick: setCodeMirrorTheme},\\n  {text: \'monokai\', onclick: setCodeMirrorTheme},\\n  {text: \'neat\', onclick: setCodeMirrorTheme},\\n  {text: \'neo\', onclick: setCodeMirrorTheme},\\n  {text: \'night\', onclick: setCodeMirrorTheme},\\n  {text: \'paraiso-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'paraiso-light\', onclick: setCodeMirrorTheme},\\n  {text: \'pastel-on-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'railscasts\', onclick: setCodeMirrorTheme},\\n  {text: \'rubyblue\', onclick: setCodeMirrorTheme},\\n  {text: \'seti\', onclick: setCodeMirrorTheme},\\n  {text: \'solarized dark\', onclick: setCodeMirrorTheme},\\n  {text: \'solarized light\', onclick: setCodeMirrorTheme},\\n  {text: \'the-matrix\', onclick: setCodeMirrorTheme},\\n  {text: \'tomorrow-night-bright\', onclick: setCodeMirrorTheme},\\n  {text: \'tomorrow-night-eighties\', onclick: setCodeMirrorTheme},\\n  {text: \'ttcn\', onclick: setCodeMirrorTheme},\\n  {text: \'twilight\', onclick: setCodeMirrorTheme},\\n  {text: \'vibrant-ink\', onclick: setCodeMirrorTheme},\\n  {text: \'xq-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'xq-light\', onclick: setCodeMirrorTheme},\\n  {text: \'yeti\', onclick: setCodeMirrorTheme},\\n  {text: \'zenburn\', onclick: setCodeMirrorTheme}\\n];\\n\\n\\/\\/ kitchen sink toolbar ini\\nfunction codeMirrorMoreSuperOptions(){\\n  if(typeof tinymce !== \\"undefined\\" && !$(\\"#codeMirrorMoreSuperOptions_wrapper\\").length){\\n    $(\\"body\\").append(\\"<div id=codeMirrorMoreSuperOptions_wrapper><div id=codeMirrorMoreSuperOptions_wrapper_boss><\\/div><div style=display:none; id=codeMirrorMoreSuperOptions_wrapper_sub><\\/div><\\/div>\\");\\n    tinymce.ui.Factory.create({\\n      type: \\"button\\",\\n      icon: \\"fullpage\\",\\n      classes:\\"moreCodeMirrorAttr\\",\\n      tooltip: \\"CodeMirror settings...\\",\\n      onPostRender:function(){\\n        $(\\".mce-moreCodeMirrorAttr\\").attr(\\"class\\",\\"mce-moreCodeMirrorAttr\\");\\n        $(\\".mce-moreCodeMirrorAttr button\\").contents().unwrap();\\n      },\\n      onclick: function(){\\n        if($(\'#codeMirrorMoreSuperOptions_wrapper_sub:hidden\').length){\\n          $(\'#codeMirrorMoreSuperOptions_wrapper_sub\').show()\\n          $(\'.mce-moreCodeMirrorAttr\').addClass(\'mce-active\')\\n        }\\n        else{\\n          $(\'#codeMirrorMoreSuperOptions_wrapper_sub\').hide()\\n          $(\'.mce-moreCodeMirrorAttr\').removeClass(\'mce-active\')\\n        }\\n      }\\n    }).renderTo(document.getElementById(\\"codeMirrorMoreSuperOptions_wrapper_boss\\"));\\n    tinymce.ui.Factory.create({\\n      type: \'button\',\\n      icon: \'fullscreen\',\\n      classes: \'codeMirrorMoreSuperOptionsFS\',\\n      tooltip: \'Fullscreen\',\\n      onclick: function(){\\n        if(getCodeMirrorCredential().thisWrap.hasClass(\\"codeMirror_editor_fullScreen\\")){\\n          getCodeMirrorCredential().thisWrap.removeClass(\\"codeMirror_editor_fullScreen\\");\\n          $(\\"#codeMirrorMoreSuperOptions_wrapper\\").removeClass(\\"codeMirror_editor_fullScreen\\");\\n          window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n        }\\n        else{\\n          getCodeMirrorCredential().thisWrap.addClass(\\"codeMirror_editor_fullScreen\\")\\n          $(\\"#codeMirrorMoreSuperOptions_wrapper\\").addClass(\\"codeMirror_editor_fullScreen\\");\\n          window[getCodeMirrorCredential().thisCodeMirrorId].refresh()\\n        }\\n      },\\n      onPostRender:function(){\\n        \\/\\/ $(\\".mce-codeMirrorMoreSuperOptions .mce-caret\\").remove();\\n        $(document).on(\\"mouseenter click\\", \\".codeMirror_wrapper_modx\\", function () {\\n          if(!$(this).find(\\"#codeMirrorMoreSuperOptions_wrapper\\").length){\\n            $(\\"#codeMirrorMoreSuperOptions_wrapper\\").prependTo($(this)).fadeIn();\\n            codeMirrorMoreSuperOptions();\\n          }\\n        })\\n      }\\n    }).renderTo(document.getElementById(\\"codeMirrorMoreSuperOptions_wrapper_sub\\"));\\n    tinymce.ui.Factory.create({\\n      type: \'listbox\',\\n      icon: \'code\',\\n      classes: \'codeMirrorMoreSuperOptionsMODE\',\\n      tooltip: \'Syntax \\/ Mode\',\\n      menu: codeMirrorMoreSuperOptionsToolButtonMODE,\\n      onPostRender: function(){\\n        $(\\".mce-codeMirrorMoreSuperOptionsMODE .mce-caret\\").remove();\\n        $(\\".mce-codeMirrorMoreSuperOptionsMODE .mce-txt\\").remove();\\n      },\\n      onselect: function(){\\n        window[getCodeMirrorCredential().thisCodeMirrorId].setOption(\\"mode\\", this.value())\\n        CodeMirror.autoLoadMode(window[getCodeMirrorCredential().thisCodeMirrorId], this.value());\\n        window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n        getCodeMirrorCredential().thisSink.text(this.value())\\n        $(\\".mce-codeMirrorMoreSuperOptionsMODE .mce-txt\\").remove();\\n      }\\n    }).renderTo(document.getElementById(\\"codeMirrorMoreSuperOptions_wrapper_sub\\"));\\n\\n    tinymce.ui.Factory.create({\\n      type: \'menubutton\',\\n      classes: \'codeMirrorMoreSuperOptionsMORE\',\\n      tooltip: \'Themes and more Options\',\\n      onPostRender:function(){\\n        \\/\\/ $(\\".mce-codeMirrorMoreSuperOptionsMORE .mce-caret\\").remove();\\n      },\\n      menu: [\\n      \\/\\/ {\\n      \\/\\/   text: \\"Show Invisibles\\",\\n      \\/\\/   classes: \\"setShowInvisibles\\",\\n      \\/\\/   onclick: function(){\\n      \\/\\/     if(window[getCodeMirrorCredential().thisCodeMirrorId].getOption(\\"showInvisibles\\")){\\n      \\/\\/       window[getCodeMirrorCredential().thisCodeMirrorId].setShowInvisibles(false);\\n      \\/\\/     }\\n      \\/\\/     else{\\n      \\/\\/       window[getCodeMirrorCredential().thisCodeMirrorId].setShowInvisibles(true);\\n      \\/\\/     }\\n      \\/\\/   }\\n      \\/\\/ },\\n      {\\n        text: \\"Refresh Editor\\",\\n        onclick: function(){\\n          window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n        }\\n      },\\n      {\\n        text: \\"Soft Wrap\\",\\n        menu: codeMirrorMoreSuperOptionsToolButtonWRAP\\n      },\\n      {\\n        text: \\"Max Height\\",\\n        menu: codeMirrorMoreSuperOptionsToolButtonHEIGHT\\n      },\\n      {\\n        text: \\"Theme\\",\\n        menu: codeMirrorMoreSuperOptionsToolButtonTHEME\\n      },\\n      {\\n        text: \\"Font Size\\",\\n        menu: codeMirrorMoreSuperOptionsToolButtonFONT,\\n      },\\n      ],\\n    }).renderTo(document.getElementById(\\"codeMirrorMoreSuperOptions_wrapper_sub\\"));\\n    if(tinymce.editors.length < 1){\\n      \\/\\/ fileManagerTopNavModalSkin = MODx.config.assets_url+\\"components\\/tinymcewrapper\\/tinymceskins\\/modxPericles\\/\\"+\\"skin.min.css\\";\\n      tinymce.DOM.loadCSS(fileManagerTopNavModalSkin+\\"\\/skin.min.css\\");\\n    }\\n  }\\n}\\n\\/\\/ ************************** END Kitchen Sink **************************\\n\\n\\n\\/*#######################################################################################\\n   *************** MODX INIT : load applicable JS and CSS files ***************\\n#######################################################################################*\\/\\n\\/*-------------------\\nmore jargon underneath\\nload or not load what files you want to use\\n-----------------------------------------------------------*\\/\\n\\n\\n\\/\\/load applicable CSS files\\nfunction loadcss(filename){\\n  var fileref=document.createElement(\\"link\\")\\n  fileref.setAttribute(\\"rel\\", \\"stylesheet\\")\\n  fileref.setAttribute(\\"type\\", \\"text\\/css\\")\\n  fileref.setAttribute(\\"href\\", filename)\\n  if (typeof fileref!=\\"undefined\\"){\\n    document.getElementsByTagName(\\"head\\")[0].appendChild(fileref);\\n   }\\n}\\n\\nfunction loadThemCSS(){\\n  loadcss(\'[[+CodeMirrorSrc]]codemirror.min.css\');\\n  loadcss(\'[[+CodeMirrorSrc]]addon\\/dialog\\/dialog.css\');\\n  loadcss(\'[[+CodeMirrorSrc]]addon\\/search\\/matchesonscrollbar.css\');\\n  loadcss(\'[[+CodeMirrorSrc]]addon\\/display\\/fullscreen.css\');\\n  loadcss(\'[[+CodeMirrorSrc]]addon\\/fold\\/foldgutter.css\');\\n  [[+CodeMirrorTHEME:notempty=`loadcss(\'[[+CodeMirrorSrc]]theme\\/[[+CodeMirrorTHEME]].css\');`]]\\n}\\nloadThemCSS();\\nCodeMirror.modeURL = \\"[[+CodeMirrorSrc]]mode\\/%N\\/%N.js\\";\\n\\n\\/\\/load applicable JS files\\nExt.Loader.load([\\n  \'[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/codemirror\\/emmet.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/wrap\\/hardwrap.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/selection\\/active-line.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/search\\/searchcursor.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/scroll\\/annotatescrollbar.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/search\\/matchesonscrollbar.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/search\\/jump-to-line.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/search\\/search.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/dialog\\/dialog.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/hint\\/show-hint.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/hint\\/html-hint.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/hint\\/xml-hint.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/edit\\/closetag.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/edit\\/trailingspace.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/display\\/fullscreen.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/fold\\/foldcode.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/fold\\/foldgutter.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/fold\\/brace-fold.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/fold\\/xml-fold.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/fold\\/comment-fold.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/edit\\/matchbrackets.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/lint\\/lint.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/lint\\/css-lint.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/lint\\/json-lint.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/lint\\/javascript-lint.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/lint\\/css-lint.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/mode\\/loadmode.js\',\\n  \'[[+CodeMirrorSrc]]mode\\/meta.js\'\\n ],\\n  function() {\\n   Ext.onReady(function () {\\n    codeMirrorTextareas();\\n   \\/\\/ })\\n   },this,{delay:50})\\n  },\\n  this,\\n  \'preserveOrder\'\\n);\\n\\nemmetForCodeMirrorIsLoaded = true; \\/\\/ this helps other CodeMirror implementations to piggy-back on this emmet\\n","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"\\/*\\n#######################################################\\nTinymceWrapperCodeMirror is a chunk to let any whoever dominate the initialization of the powerful CodeMirror code editor.\\nThis tiny config can work any where and with anything in MODX.\\nIt will sync with TinyMCE if TinyMCE RTE is detected\\n\\nYours truly, donshakespeare @ MODX forums\\n#######################################################\\n\\n##Language \\/ Mode \\/ Syntax\\n\\"mode\\": \\"html\\",\\n\\"mode\\": \\"auto\\/html\\",\\n  -- (elements) static source extension dependent - fallback to html\\n  -- (resources) content type (mimetype) dependent - fallsback to html\\n\\n##max-height of editor in pixels\\n\\"maxHeight\\": pure integer \\/ \\"textarea\\" \\/ \\"Infinity\\",\\n  -- integer - e.g 100 (will make height 100px)\\n  -- \\"textarea\\" - editor will borrow the fixed height of its original MODX textarea and will auto overflow\\n  -- \\"Infiinity\\" - editor will keep growing according to the height of its content.\\n*\\/\\n\\n\\ncodeMirrorTextareasIDorCLASS = [\\n  {\\n    \\"name\\": \\"introtext\\",\\n    \\"selector\\": \\"#modx-resource-introtext\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"textarea\\",\\n  },\\n  {\\n    \\"name\\": \\"description\\",\\n    \\"selector\\": \\"#modx-resource-description\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"textarea\\"\\n  },\\n  {\\n    \\"name\\": \\"richtext\\",\\n    \\"selector\\": \\".modx-richtext\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": 200,\\n  },\\n  {\\n    \\"name\\": \\"resource_content\\",\\n    \\"selector\\": \\"#ta\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"chunk\\",\\n    \\"selector\\": \\"#modx-chunk-snippet\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"template\\",\\n    \\"selector\\": \\"#modx-template-content\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"snippet\\",\\n    \\"selector\\": \\"#modx-snippet-snippet\\",\\n    \\"mode\\": \\"auto\\/php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"plugin\\",\\n    \\"selector\\": \\"#modx-plugin-plugincode\\",\\n    \\"mode\\": \\"auto\\/php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"file\\",\\n    \\"selector\\": \\"#modx-file-content\\",\\n    \\"mode\\": \\"auto\\/css\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  }\\n];\\n\\n\\/\\/ all on-the-fly textareas attached to mouseenter event (e.g Quick update\\/create textareas)\\ncodeMirrorFlyTextareasIDorCLASS = [\\n  {\\n    \\"selector\\": \\"textarea[name=snippet]\\",\\n    \\"mode\\": \\"php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  }, {\\n    \\"selector\\": \\"textarea[name=content]\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  }, {\\n    \\"selector\\": \\"textarea[name=plugincode]\\",\\n    \\"mode\\": \\"php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeight\\": \\"Infinity\\",\\n  }\\n];\\n\\n\\/\\/extend if you like\\nmodxCodeMirrorMimeTypes = {\\n  \'text\\/html\': \'html\',\\n  \'text\\/plain\': \'text\',\\n  \'text\\/css\': \'css\',\\n  \'text\\/javascript\': \'javascript\',\\n  \'application\\/javascript\': \'javascript\',\\n  \'text\\/x-less\': \'less\',\\n  \'application\\/xml\': \'xml\',\\n  \'text\\/xml\': \'xml\',\\n  \'application\\/json\': \'json\',\\n  \'text\\/x-markdown\': \'markdown\'\\n};\\n\\n\\n\\/\\/ actual CodeMirror Init configuration (get all from official CodeMirror site, oh yea - total freedom!!!)\\ncodeMirrorInnerInit = function(mode, theme, maxLines, wrap) {\\n  var viewportMargin = viewportMargin ? viewportMargin : Infinity;\\n  var inner = {\\n      mode: mode,\\n      [[+CodeMirrorTHEME:notempty=`theme: \\"[[+CodeMirrorTHEME]]\\",`]]\\n      indentOnInit: true,\\n      lineNumbers: true,\\n      lineWrapping: true,\\n      foldGutter: true,\\n      gutters: [\\"CodeMirror-linenumbers\\", \\"CodeMirror-foldgutter\\"],\\n      indentUnit: 1,\\n      tabSize: 1,\\n      matchBrackets: true,\\n      styleActiveLine: true,\\n      autoCloseTags: true,\\n      showTrailingSpace: true,\\n      viewportMargin: viewportMargin,\\n      extraKeys: {\\n        \\"Ctrl-Space\\": \\"autocomplete\\",\\n        \\"Alt-F\\": \\"findPersistent\\",\\n        \\"F11\\": function(cm) {\\n          cm.setOption(\\"fullScreen\\", !cm.getOption(\\"fullScreen\\"));\\n        },\\n        \\"Esc\\": function(cm) {\\n          if (cm.getOption(\\"fullScreen\\")) cm.setOption(\\"fullScreen\\", false);\\n        },\\n        \\"Ctrl-Q\\": function(cm){\\n          cm.foldCode(cm.getCursor());\\n         }\\n      }\\n    }\\n  return inner;\\n};\\n\\n\\/*#######################################################################################\\n************************** abandon all fear - all ye who enter **************************\\n#######################################################################################*\\/\\n\\nmodxCodeMirrorInit = function (elem, mode, spec, maxLines, wrap, realFly){\\n  var originalTextarea = document.getElementById(elem);\\n  var maxHeightCodeMirror = maxLines;\\n  originalTextarea.style.display  = \\"none\\";\\n  if(isNaN(maxHeightCodeMirror)){\\n    var height = $(originalTextarea).height();\\n  }\\n  else{\\n    if(maxHeightCodeMirror == \\"Infinity\\"){\\n      var height = \\"auto\\";\\n    }\\n    else{\\n      var height = maxHeightCodeMirror;\\n    }\\n  }\\n  var spanMode = mode;\\n  if(mode == \\"null\\" || !mode){\\n    var mode = \\"null\\";\\n    var spanMode = \\"text\\/plain\\";\\n  }\\n  if(mode == \\"html\\" || mode == \\"htm\\"){\\n    var mode = \\"htmlmixed\\";\\n    var spec = \\"text\\/html\\";\\n  }\\n  var codeMirrorTempDiv =\\n    $(\'<div>\', {\\n      \'id\': \'codeMirror_wrapper_\'+originalTextarea.id,\\n      \'class\': \'codeMirror_wrapper_modx \'+realFly,\\n      \'data-codemirror\': \'codeMirror_id_\'+originalTextarea.id,\\n      \'data-origin\': originalTextarea.id,\\n      \'data-mode\': mode,\\n      \'data-maxL\': maxLines,\\n      \'data-wrap\': wrap\\n    }).prepend(\\n      $(\'<span>\', {\\n        \'class\': \'codeMirrorKitchenSink\',\\n        \'text\': spanMode,\\n        \'title\': \'maxLine: \'+maxLines+\'... wrap: \'+wrap\\n      }),\\n      $(\'<textarea>\', {\\n        \'id\': \'codeMirror_id_\'+originalTextarea.id,\\n        \'width\': \\"auto\\",\\n        \'height\': height ? height : \\"\\",\\n        \'data-origin\': originalTextarea.id\\n      })\\n    ).hide().insertBefore(originalTextarea);\\n\\n  window[\\"codeMirror_id_\\" + originalTextarea.id] = CodeMirror.fromTextArea(document.getElementById(\'codeMirror_id_\'+originalTextarea.id), codeMirrorInnerInit(spec));\\n  \\/\\/ if(mode == \\"htmlmixed\\"){\\n    \\/\\/ window[\\"codeMirror_id_\\" + originalTextarea.id].setOption(\\"profile\\",\\"xhtml\\");\\n    emmetCodeMirror(window[\\"codeMirror_id_\\" + originalTextarea.id]);\\n  \\/\\/ }\\n  CodeMirror.autoLoadMode(window[\\"codeMirror_id_\\" + originalTextarea.id], mode);\\n  window[\\"codeMirror_id_\\" + originalTextarea.id].setValue(originalTextarea.value);\\n  $(\'#codeMirror_wrapper_\'+originalTextarea.id).delay(100).fadeIn();\\n  $(\'#codeMirror_wrapper_\'+originalTextarea.id).find(\\".CodeMirror\\").css(\\"height\\",height)\\n  setTimeout(function(){\\n    window[\\"codeMirror_id_\\" + originalTextarea.id].refresh();\\n  },250)\\n  codeMirrorSetContentsilentMODX = false;\\n  window[\\"codeMirror_id_\\" + originalTextarea.id].on(\\"focus\\", function() {\\n    if(typeof tinymce !== \\"undefined\\" && tinymce.get(elem)){\\n      tinymce.get(elem).on(\\"keyup change\\", function() {\\n        if($(\\"#codeMirror_id_\\"+originalTextarea.id).length){\\n          codeMirrorSetContentsilentMODX = true;\\n          window[\\"codeMirror_id_\\" + originalTextarea.id].setValue(tinymce.get(elem).getContent());\\n          codeMirrorSetContentsilentMODX = false;\\n        }\\n      })\\n    }\\n  })\\n  window[\\"codeMirror_id_\\" + originalTextarea.id].on(\\"change\\", function() {\\n    if (codeMirrorSetContentsilentMODX){\\n      return;\\n    }\\n    else{\\n      originalTextarea.value = window[\\"codeMirror_id_\\" + originalTextarea.id].getValue();\\n      if(typeof tinymce !== \\"undefined\\" && tinymce.get(elem)){\\n        tinymce.get(elem).setContent(window[\\"codeMirror_id_\\" + originalTextarea.id].getValue());\\n      }\\n    }\\n  })\\n  $(originalTextarea).parents(\\".modx-tv\\").find(\\".modx-tv-reset\\").on(\\"click\\", function(){\\n    setTimeout(function(){\\n      window[\\"codeMirror_id_\\" + originalTextarea.id].setValue(originalTextarea.value);\\n    },200)\\n  });\\n  $(originalTextarea).on(\\"keyup change\\", function() {\\n    codeMirrorSetContentsilentMODX = true;\\n    window[\\"codeMirror_id_\\" + originalTextarea.id].setValue($(this).val());\\n    codeMirrorSetContentsilentMODX = false;\\n   })\\n}\\nfunction changeMyButton(thisButton,id,mode,spec,maxLines,wrap,realFly){\\n  if($(thisButton).hasClass(\\"codeMirrorActive\\")){\\n    if($(\\"#\\"+id).is(\':visible\') ){\\n      $(thisButton).find(\\"button\\").text(\\"Remove CodeMirror\\");\\n      $(thisButton).removeClass(\\"codeMirrorActive\\");\\n      modxCodeMirrorInit(id,mode,spec,maxLines,wrap,realFly)\\n    }\\n  }\\n  else{\\n    $(thisButton).addClass(\\"codeMirrorActive\\");\\n    $(thisButton).find(\\"button\\").text(\\"Edit With CodeMirror\\");\\n    var thisCodeMirrorId = $(thisButton).parents(\\".modx-window\\").find(\\".codeMirror_wrapper_modx\\").data(\\"codemirror\\");\\n    window[thisCodeMirrorId].toTextArea();\\n    $(\\"#codeMirror_wrapper_\\"+id).remove();\\n    $(\\"#\\"+id).fadeIn();\\n  }\\n}\\n\\nfunction splitMyJoint(val,joint,index) {\\n  var item = val.split(joint);\\n  return item[index];\\n}\\n\\nfunction getCodeMirrorCredential() {\\n  var thisWrap = $(\\"#codeMirrorMoreSuperOptions_wrapper\\").parent();\\n  var thisSink = thisWrap.find(\\".codeMirrorKitchenSink\\");\\n  var thisActualCodeMirror = thisWrap.find(\\".CodeMirror\\");\\n  var originalTextareaId = thisWrap.data(\\"origin\\");\\n  var thisCodeMirrorId = thisWrap.data(\\"codemirror\\");\\n  return {\\n      thisWrap: thisWrap,\\n      thisSink: thisSink,\\n      originalTextareaId: originalTextareaId,\\n      thisCodeMirrorId: thisCodeMirrorId,\\n      thisActualCodeMirror: thisActualCodeMirror\\n    }\\n}\\n\\nfunction autoDetectMode(filePathOrModeOrMime) {\\n  var val = filePathOrModeOrMime, m, mode, spec;\\n  if (m = \\/.+\\\\.([^.]+)$\\/.exec(val)) {\\n    var info = CodeMirror.findModeByExtension(m[1]);\\n    if (info) {\\n      mode = info.mode;\\n      spec = info.mime;\\n    }\\n  }\\n  else if (\\/\\\\\\/\\/.test(val)) {\\n    var info = CodeMirror.findModeByMIME(val);\\n    if (info) {\\n      mode = info.mode;\\n      spec = val;\\n    }\\n  }\\n  else {\\n    mode = spec = val;\\n  }\\n  return {\\n    mode: mode,\\n    spec: spec\\n  };\\n}\\n\\nfunction codeMirrorTextareas(){\\n  var mainCSScodeMirror = \'<style id=mainCSScodeMirror>.x-tab-panel,.x-window-body{overflow-x:hidden!important}#codeMirrorMoreSuperOptions_wrapper{position:absolute!important;z-index:9!important;right:10px;top:-20px}#codeMirrorMoreSuperOptions_wrapper .mce-listbox button{padding-right:10px!important}#codeMirrorMoreSuperOptions_wrapper .mce-btn-has-text .mce-ico{padding-right:0!important}#codeMirrorMoreSuperOptions_wrapper.codeMirror_editor_fullScreen{position:fixed!important;right:23px}#codeMirrorMoreSuperOptions_wrapper_boss{float:right;cursor:pointer}#codeMirrorMoreSuperOptions_wrapper_boss button{padding:0}#codeMirrorMoreSuperOptions_wrapper_sub{margin-top:24px}.codeMirror_wrapper_modx.codeMirror_editor_fullScreen{position:fixed;top:0;width:100%;height:100%;left:0;right:0;bottom:0;z-index:26;background:#fff;overflow:auto}.codeMirrorKitchenSink{position:absolute;background: #fff;color: #000;padding: 0px 6px;border-radius: 8px 0 8px 0;top: -20px;right:30px;z-index:9;font-size:12px;font-weight:bold;border:1px solid #808080;font-style:italic;}.twCodeMirrorParent .CodeMirror{height:auto}<\\/style>\';\\n  if(!$(\\"head #mainCSScodeMirror\\").length){\\n    $(\'head\').append(mainCSScodeMirror);\\n  }\\n  \\/\\/all textareas ... that are present on page load\\n  $.each(codeMirrorTextareasIDorCLASS, function() {\\n    if($(this.selector).length){\\n      $(this.selector).parent().addClass(\\"twCodeMirrorParent\\");\\n      var twCodeMirrorRealOrFly = \\"twCodeMirrorReal\\";\\n      var elemCodeMirror = $(this.selector);\\n      var ext = \\"test.\\"+this.mode;\\n      var mode = autoDetectMode(ext).mode;\\n      var spec = autoDetectMode(ext).spec;\\n      var height = this.maxHeight;\\n      var wrap = this.wrap;\\n      if(this.name == \\"resource_content\\" && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var mode = autoDetectMode(\\"test.\\"+splitMyJoint(this.mode,\\"\\/\\",1)).mode;\\n        var spec = autoDetectMode(\\"test.\\"+splitMyJoint(this.mode,\\"\\/\\",1)).spec;\\n        if(typeof twGetResourceContentType !== \\"undefined\\" && twGetResourceContentType !== \\"\\"){\\n          var mode = autoDetectMode(twGetResourceContentType).mode; \\/\\/autoDetectMode value is supplied by serverside plugin\\n          var spec = autoDetectMode(twGetResourceContentType).spec;\\n        }\\n      }\\n      else if((this.name == \\"chunk\\" || this.name == \\"snippet\\" || this.name == \\"plugin\\" || this.name == \\"template\\") && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var mode = splitMyJoint(this.mode,\\"\\/\\",1);\\n        if($(\\"#modx-\\"+this.name+\\"-static-file\\").length && $(\\"#modx-\\"+this.name+\\"-static-file\\").val() !== \\"\\"){\\n          var filePath = $(\\"#modx-\\"+this.name+\\"-static-file\\").val();\\n          var mode = autoDetectMode(filePath).mode;\\n          var spec = autoDetectMode(filePath).spec;\\n        }\\n      }\\n      else if(this.name == \\"file\\" && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var filePath = $(\\"#modx-file-name\\").val();\\n        var mode = autoDetectMode(filePath).mode;\\n        var spec = autoDetectMode(filePath).spec;\\n      }\\n      $(this.selector).each(function(){ \\/\\/ for the sake of .modx-richtext and other classnames provided\\n        var elemCodeMirrorId = $(this).attr(\\"id\\");\\n        modxCodeMirrorInit(elemCodeMirrorId,mode,spec,height,wrap,twCodeMirrorRealOrFly);\\n      })\\n    }\\n  });\\n\\n  \\/\\/all textareas added dynamically to the DOM ... quick create\\/update and anything else\\n  $(document).on(\\"mouseenter\\", \\".modx-window\\", function () {\\n    $this = $(this);\\n    $.each(codeMirrorFlyTextareasIDorCLASS, function() {\\n      if($this.find(this.selector).length){\\n        var thisTextarea = $this.find(this.selector);\\n        thisTextarea.parent().addClass(\\"twCodeMirrorParent\\");\\n        twElemCodeMirrorId = thisTextarea.attr(\\"id\\");\\n        twCodeMirrorMode = autoDetectMode(this.mode).mode;\\n        twCodeMirrorSpec = autoDetectMode(this.mode).spec;\\n        twCodeMirrorRealOrFly = \\"twCodeMirrorQuickFly\\";\\n        if($this.find(\\"input[name=path]\\").length){ \\/\\/ for quick edit existing files\\n          twCodeMirrorMode = $this.find(\\"input[name=path]\\").val()\\n          twCodeMirrorMode = autoDetectMode(twCodeMirrorMode).mode;\\n          twCodeMirrorSpec = autoDetectMode(twCodeMirrorMode).spec;\\n        }\\n        twCodeMirrorHeight = this.maxHeight;\\n        twCodeMirrorWrap = this.wrap;\\n        if(thisTextarea.is(\':visible\') && $this.find(\\"#codeMirror_wrapper_\\"+twElemCodeMirrorId).length < 1 && !$this.find(\\".tinyCM\\").length){\\n        \\/\\/ modxCodeMirrorInit(twElemCodeMirrorId,twCodeMirrorMode,twCodeMirrorSpec,twCodeMirrorHeight,twCodeMirrorWrap,twCodeMirrorRealOrFly) \\/\\/ to fire this automatically, comment the bellow\\n          $this.find(\\".x-toolbar-left-row\\").append(\\"<p onclick=changeMyButton(this,twElemCodeMirrorId,twCodeMirrorMode,twCodeMirrorSpec,twCodeMirrorHeight,twCodeMirrorWrap,twCodeMirrorRealOrFly); class=\\\\\'tinyCM codeMirrorActive x-btn x-btn-small x-btn-icon-small-left x-btn-noicon\\\\\' unselectable=\\\\\'on\\\\\'><em><button class=\\\\\'x-btn-text\\\\\'>Edit with CodeMirror<\\/button><\\/em><\\/p>\\");\\n        }\\n      }\\n    });\\n  });\\n  if (typeof codeMirrorMoreSuperOptions == \'function\') { \\n    codeMirrorMoreSuperOptions();\\n  }\\n}\\n\\n\\/*#######################################################################################\\n     *********** Begin Kitchen Sink  (plcodeMirror in chunk or external file ***********\\n#######################################################################################*\\/\\n\\/\\/ font size \\/ themes \\/ height etc\\nfunction setCodeMirrorTheme(){\\n  var theme = this.text();\\n  var link = document.createElement(\'link\');\\n  link.onload = function(){\\n      window[getCodeMirrorCredential().thisCodeMirrorId].setOption(\\"theme\\", theme);\\n  };\\n  link.rel = \\"stylesheet\\";\\n  link.media = \\"all\\";\\n  link.href = \\"[[+CodeMirrorSrc]]theme\\/\\"+theme+\\".css\\";\\n  document.getElementsByTagName(\'head\')[0].appendChild(link);\\n}\\n\\/\\/ kitchen sink\\nfunction setCodeMirrorSetFont(){\\n  getCodeMirrorCredential().thisActualCodeMirror.css(\\"font-size\\",this.text());\\n  window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n}\\n\\/\\/ kitchen sink\\nfunction setCodeMirrorSetWrap(){\\n  if(this.text() == \\"free\\"){\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(\\"\\", \\"\\");\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n  else{\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(+this.text()+290, \\"\\");\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n}\\n\\/\\/ kitchen sink\\nfunction setCodeMirrorSetHeight(){\\n  var thisTextarea = getCodeMirrorCredential().originalTextareaId;\\n  var option = this.text();\\n  if(option == \\"Textarea\\"){\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(\\"\\", $(\\"#\\"+thisTextarea).height());\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n  else if(option == \\"1\\"){\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(\\"\\", 40);\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n  else if(option == \\"10\\"){\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(\\"\\", 200);\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n  else {\\n    window[getCodeMirrorCredential().thisCodeMirrorId].setSize(\\"\\", \\"\\");\\n    window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n  }\\n}\\n\\n\\n\\/\\/ kitchen sink\\n\\/\\/ mode \\/ syntax \\/ language -- add as many as you like\\ncodeMirrorMoreSuperOptionsToolButtonMODE =[\\n  {text: \'--- MOST COMMON ---\', value: \'\', disabled: true, selected: false, active: false},\\n  {text: \'HTML\', value: \'htmlmixed\'},\\n  {text: \'Markdown\', value: \'markdown\'},\\n  {text: \'CSS\', value: \'css\'},\\n  {text: \'PHP\', value: \'php\'},\\n  {text: \'JavaScript\', value: \'javascript\'},\\n  {text: \'JSON\', value: \'javascript\'},\\n  {text: \'Text\', value: \'null\'},\\n  {text: \'LESS\', value: \'css\'},\\n  {text: \'SASS\', value: \'sass\'},\\n  {text: \'SCSS\', value: \'css\'},\\n  {text: \'--- ALL SYNTAX ---\', value: \'\', disabled: true, selected: false, active: false},\\n  {text: \'APL\', value: \'apl\'},\\n  {text: \'PGP\', value: \'asciiarmor\'},\\n  {text: \'ASN.1\', value: \'asn.1\'},\\n  {text: \'Asterisk\', value: \'asterisk\'},\\n  {text: \'Brainfuck\', value: \'brainfuck\'},\\n  {text: \'C\', value: \'clike\'},\\n  {text: \'C++\', value: \'clike\'},\\n  {text: \'Cobol\', value: \'cobol\'},\\n  {text: \'C#\', value: \'clike\'},\\n  {text: \'Clojure\', value: \'clojure\'},\\n  {text: \'ClojureScript\', value: \'clojure\'},\\n  {text: \'Closure Stylesheets (GSS)\', value: \'css\'},\\n  {text: \'CMake\', value: \'cmake\'},\\n  {text: \'CoffeeScript\', value: \'coffeescript\'},\\n  {text: \'Common Lisp\', value: \'commonlisp\'},\\n  {text: \'Cypher\', value: \'cypher\'},\\n  {text: \'Cython\', value: \'python\'},\\n  {text: \'Crystal\', value: \'crystal\'},\\n  {text: \'CSS\', value: \'css\'},\\n  {text: \'CQL\', value: \'sql\'},\\n  {text: \'D\', value: \'d\'},\\n  {text: \'Dart\', value: \'dart\'},\\n  {text: \'diff\', value: \'diff\'},\\n  {text: \'Django\', value: \'django\'},\\n  {text: \'Dockerfile\', value: \'dockerfile\'},\\n  {text: \'DTD\', value: \'dtd\'},\\n  {text: \'Dylan\', value: \'dylan\'},\\n  {text: \'EBNF\', value: \'ebnf\'},\\n  {text: \'ECL\', value: \'ecl\'},\\n  {text: \'edn\', value: \'clojure\'},\\n  {text: \'Eiffel\', value: \'eiffel\'},\\n  {text: \'Elm\', value: \'elm\'},\\n  {text: \'Embedded Javascript\', value: \'htmlembedded\'},\\n  {text: \'Embedded Ruby\', value: \'htmlembedded\'},\\n  {text: \'Erlang\', value: \'erlang\'},\\n  {text: \'Factor\', value: \'factor\'},\\n  {text: \'FCL\', value: \'fcl\'},\\n  {text: \'Forth\', value: \'forth\'},\\n  {text: \'Fortran\', value: \'fortran\'},\\n  {text: \'F#\', value: \'mllike\'},\\n  {text: \'Gas\', value: \'gas\'},\\n  {text: \'Gherkin\', value: \'gherkin\'},\\n  {text: \'GitHub Flavored Markdown\', value: \'gfm\'},\\n  {text: \'Go\', value: \'go\'},\\n  {text: \'Groovy\', value: \'groovy\'},\\n  {text: \'HAML\', value: \'haml\'},\\n  {text: \'Haskell\', value: \'haskell\'},\\n  {text: \'Haskell (Literate)\', value: \'haskell-literate\'},\\n  {text: \'Haxe\', value: \'haxe\'},\\n  {text: \'HXML\', value: \'haxe\'},\\n  {text: \'ASP.NET\', value: \'htmlembedded\'},\\n  {text: \'HTML\', value: \'htmlmixed\'},\\n  {text: \'HTTP\', value: \'http\'},\\n  {text: \'IDL\', value: \'idl\'},\\n  {text: \'Jade\', value: \'jade\'},\\n  {text: \'Java\', value: \'clike\'},\\n  {text: \'Java Server Pages\', value: \'htmlembedded\'},\\n  {name: \'JavaScript\', value: \'javascript\'},\\n  {text: \'JSON\', value: \'javascript\'},\\n  {text: \'JSON-LD\', value: \'javascript\'},\\n  {text: \'JSX\', value: \'jsx\'},\\n  {text: \'Jinja2\', value: \'jinja2\'},\\n  {text: \'Julia\', value: \'julia\'},\\n  {text: \'Kotlin\', value: \'clike\'},\\n  {text: \'LESS\', value: \'css\'},\\n  {text: \'LiveScript\', value: \'livescript\'},\\n  {text: \'Lua\', value: \'lua\'},\\n  {text: \'Markdown\', value: \'markdown\'},\\n  {text: \'mIRC\', value: \'mirc\'},\\n  {text: \'MariaDB SQL\', value: \'sql\'},\\n  {text: \'Mathematica\', value: \'mathematica\'},\\n  {text: \'Modelica\', value: \'modelica\'},\\n  {text: \'MUMPS\', value: \'mumps\'},\\n  {text: \'MS SQL\', value: \'sql\'},\\n  {text: \'MySQL\', value: \'sql\'},\\n  {text: \'Nginx\', value: \'nginx\'},\\n  {text: \'NSIS\', value: \'nsis\'},\\n  {text: \'NTriples\', value: \'ntriples\'},\\n  {text: \'Objective C\', value: \'clike\'},\\n  {text: \'OCaml\', value: \'mllike\'},\\n  {text: \'Octave\', value: \'octave\'},\\n  {text: \'Oz\', value: \'oz\'},\\n  {text: \'Pascal\', value: \'pascal\'},\\n  {text: \'PEG.js\', value: \'pegjs\'},\\n  {text: \'Perl\', value: \'perl\'},\\n  {text: \'PHP\', value: \'php\'},\\n  {text: \'Pig\', value: \'pig\'},\\n  {text: \'Plain Text\', value: \'null\'},\\n  {text: \'PLSQL\', value: \'sql\'},\\n  {text: \'PowerShell\', value: \'powershell\'},\\n  {text: \'Properties files\', value: \'properties\'},\\n  {text: \'ProtoBuf\', value: \'protobuf\'},\\n  {text: \'Python\', value: \'python\'},\\n  {text: \'Puppet\', value: \'puppet\'},\\n  {text: \'Q\', value: \'q\'},\\n  {text: \'R\', value: \'r\'},\\n  {text: \'reStructuredText\', value: \'rst\'},\\n  {text: \'RPM Changes\', value: \'rpm\'},\\n  {text: \'RPM Spec\', value: \'rpm\'},\\n  {text: \'Ruby\', value: \'ruby\'},\\n  {text: \'Rust\', value: \'rust\'},\\n  {text: \'SAS\', value: \'sas\'},\\n  {text: \'Sass\', value: \'sass\'},\\n  {text: \'Scala\', value: \'clike\'},\\n  {text: \'Scheme\', value: \'scheme\'},\\n  {text: \'SCSS\', value: \'css\'},\\n  {text: \'Shell\', value: \'shell\'},\\n  {text: \'Sieve\', value: \'sieve\'},\\n  {text: \'Slim\', value: \'slim\'},\\n  {text: \'Smalltalk\', value: \'smalltalk\'},\\n  {text: \'Smarty\', value: \'smarty\'},\\n  {text: \'Solr\', value: \'solr\'},\\n  {text: \'Soy\', value: \'soy\'},\\n  {text: \'SPARQL\', value: \'sparql\'},\\n  {text: \'Spreadsheet\', value: \'spreadsheet\', alias: [\'excel\', \'formula\']},\\n  {text: \'SQL\', value: \'sql\'},\\n  {text: \'Squirrel\', value: \'clike\'},\\n  {text: \'Swift\', value: \'swift\'},\\n  {text: \'sTeX\', value: \'stex\'},\\n  {text: \'LaTeX\', value: \'stex\'},\\n  {text: \'SystemVerilog\', value: \'verilog\'},\\n  {text: \'Tcl\', value: \'tcl\'},\\n  {text: \'Textile\', value: \'textile\'},\\n  {text: \'TiddlyWiki \', value: \'tiddlywiki\'},\\n  {text: \'Tiki wiki\', value: \'tiki\'},\\n  {text: \'TOML\', value: \'toml\'},\\n  {text: \'Tornado\', value: \'tornado\'},\\n  {text: \'troff\', value: \'troff\'},\\n  {text: \'TTCN\', value: \'ttcn\'},\\n  {text: \'TTCN_CFG\', value: \'ttcn-cfg\'},\\n  {text: \'Turtle\', value: \'turtle\'},\\n  {text: \'TypeScript\', value: \'javascript\'},\\n  {text: \'Twig\', value: \'twig\'},\\n  {text: \'Web IDL\', value: \'webidl\'},\\n  {text: \'VB.NET\', value: \'vb\'},\\n  {text: \'VBScript\', value: \'vbscript\'},\\n  {text: \'Velocity\', value: \'velocity\'},\\n  {text: \'Verilog\', value: \'verilog\'},\\n  {text: \'VHDL\', value: \'vhdl\'},\\n  {text: \'XML\', value: \'xml\'},\\n  {text: \'XQuery\', value: \'xquery\'},\\n  {text: \'Yacas\', value: \'yacas\'},\\n  {text: \'YAML\', value: \'yaml\'},\\n  {text: \'Z80\', value: \'z80\'},\\n  {text: \'mscgen\', value: \'mscgen\'},\\n  {text: \'xu\', value: \'mscgen\'},\\n  {text: \'msgenny\', value: \'mscgen\'}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change font size on the fly\\ncodeMirrorMoreSuperOptionsToolButtonFONT =[\\n  {text: \'10px\', onclick: setCodeMirrorSetFont},\\n  {text: \'11px\', onclick: setCodeMirrorSetFont},\\n  {text: \'12px\', onclick: setCodeMirrorSetFont},\\n  {text: \'13px\', onclick: setCodeMirrorSetFont},\\n  {text: \'14px\', onclick: setCodeMirrorSetFont},\\n  {text: \'15px\', onclick: setCodeMirrorSetFont},\\n  {text: \'16px\', onclick: setCodeMirrorSetFont},\\n  {text: \'18px\', onclick: setCodeMirrorSetFont},\\n  {text: \'20px\', onclick: setCodeMirrorSetFont},\\n  {text: \'24px\', onclick: setCodeMirrorSetFont}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change wrap style\\ncodeMirrorMoreSuperOptionsToolButtonWRAP =[\\n  {text: \'free\', onclick: setCodeMirrorSetWrap},\\n  {text: \'40\', onclick: setCodeMirrorSetWrap},\\n  {text: \'180\', onclick: setCodeMirrorSetWrap}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change height\\/max lines\\ncodeMirrorMoreSuperOptionsToolButtonHEIGHT =[\\n  {text: \'1\', onclick: setCodeMirrorSetHeight},\\n  {text: \'10\', onclick: setCodeMirrorSetHeight},\\n  {text: \'Infinity\', onclick: setCodeMirrorSetHeight},\\n  {text: \'Textarea\', onclick: setCodeMirrorSetHeight}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change theme on the fly\\ncodeMirrorMoreSuperOptionsToolButtonTHEME = [\\n  {text: \'3024-day\', onclick: setCodeMirrorTheme},\\n  {text: \'3024-night\', onclick: setCodeMirrorTheme},\\n  {text: \'abcdef\', onclick: setCodeMirrorTheme},\\n  {text: \'ambiance\', onclick: setCodeMirrorTheme},\\n  {text: \'base16-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'base16-light\', onclick: setCodeMirrorTheme},\\n  {text: \'bespin\', onclick: setCodeMirrorTheme},\\n  {text: \'blackboard\', onclick: setCodeMirrorTheme},\\n  {text: \'cobalt\', onclick: setCodeMirrorTheme},\\n  {text: \'colorforth\', onclick: setCodeMirrorTheme},\\n  {text: \'dracula\', onclick: setCodeMirrorTheme},\\n  {text: \'eclipse\', onclick: setCodeMirrorTheme},\\n  {text: \'elegant\', onclick: setCodeMirrorTheme},\\n  {text: \'erlang-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'hopscotch\', onclick: setCodeMirrorTheme},\\n  {text: \'icecoder\', onclick: setCodeMirrorTheme},\\n  {text: \'isotope\', onclick: setCodeMirrorTheme},\\n  {text: \'lesser-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'liquibyte\', onclick: setCodeMirrorTheme},\\n  {text: \'material\', onclick: setCodeMirrorTheme},\\n  {text: \'mbo\', onclick: setCodeMirrorTheme},\\n  {text: \'mdn-like\', onclick: setCodeMirrorTheme},\\n  {text: \'midnight\', onclick: setCodeMirrorTheme},\\n  {text: \'monokai\', onclick: setCodeMirrorTheme},\\n  {text: \'neat\', onclick: setCodeMirrorTheme},\\n  {text: \'neo\', onclick: setCodeMirrorTheme},\\n  {text: \'night\', onclick: setCodeMirrorTheme},\\n  {text: \'paraiso-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'paraiso-light\', onclick: setCodeMirrorTheme},\\n  {text: \'pastel-on-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'railscasts\', onclick: setCodeMirrorTheme},\\n  {text: \'rubyblue\', onclick: setCodeMirrorTheme},\\n  {text: \'seti\', onclick: setCodeMirrorTheme},\\n  {text: \'solarized dark\', onclick: setCodeMirrorTheme},\\n  {text: \'solarized light\', onclick: setCodeMirrorTheme},\\n  {text: \'the-matrix\', onclick: setCodeMirrorTheme},\\n  {text: \'tomorrow-night-bright\', onclick: setCodeMirrorTheme},\\n  {text: \'tomorrow-night-eighties\', onclick: setCodeMirrorTheme},\\n  {text: \'ttcn\', onclick: setCodeMirrorTheme},\\n  {text: \'twilight\', onclick: setCodeMirrorTheme},\\n  {text: \'vibrant-ink\', onclick: setCodeMirrorTheme},\\n  {text: \'xq-dark\', onclick: setCodeMirrorTheme},\\n  {text: \'xq-light\', onclick: setCodeMirrorTheme},\\n  {text: \'yeti\', onclick: setCodeMirrorTheme},\\n  {text: \'zenburn\', onclick: setCodeMirrorTheme}\\n];\\n\\n\\/\\/ kitchen sink toolbar ini\\nfunction codeMirrorMoreSuperOptions(){\\n  if(typeof tinymce !== \\"undefined\\" && !$(\\"#codeMirrorMoreSuperOptions_wrapper\\").length){\\n    $(\\"body\\").append(\\"<div id=codeMirrorMoreSuperOptions_wrapper><div id=codeMirrorMoreSuperOptions_wrapper_boss><\\/div><div style=display:none; id=codeMirrorMoreSuperOptions_wrapper_sub><\\/div><\\/div>\\");\\n    tinymce.ui.Factory.create({\\n      type: \\"button\\",\\n      icon: \\"fullpage\\",\\n      classes:\\"moreCodeMirrorAttr\\",\\n      tooltip: \\"CodeMirror settings...\\",\\n      onPostRender:function(){\\n        $(\\".mce-moreCodeMirrorAttr\\").attr(\\"class\\",\\"mce-moreCodeMirrorAttr\\");\\n        $(\\".mce-moreCodeMirrorAttr button\\").contents().unwrap();\\n      },\\n      onclick: function(){\\n        if($(\'#codeMirrorMoreSuperOptions_wrapper_sub:hidden\').length){\\n          $(\'#codeMirrorMoreSuperOptions_wrapper_sub\').show()\\n          $(\'.mce-moreCodeMirrorAttr\').addClass(\'mce-active\')\\n        }\\n        else{\\n          $(\'#codeMirrorMoreSuperOptions_wrapper_sub\').hide()\\n          $(\'.mce-moreCodeMirrorAttr\').removeClass(\'mce-active\')\\n        }\\n      }\\n    }).renderTo(document.getElementById(\\"codeMirrorMoreSuperOptions_wrapper_boss\\"));\\n    tinymce.ui.Factory.create({\\n      type: \'button\',\\n      icon: \'fullscreen\',\\n      classes: \'codeMirrorMoreSuperOptionsFS\',\\n      tooltip: \'Fullscreen\',\\n      onclick: function(){\\n        if(getCodeMirrorCredential().thisWrap.hasClass(\\"codeMirror_editor_fullScreen\\")){\\n          getCodeMirrorCredential().thisWrap.removeClass(\\"codeMirror_editor_fullScreen\\");\\n          $(\\"#codeMirrorMoreSuperOptions_wrapper\\").removeClass(\\"codeMirror_editor_fullScreen\\");\\n          window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n        }\\n        else{\\n          getCodeMirrorCredential().thisWrap.addClass(\\"codeMirror_editor_fullScreen\\")\\n          $(\\"#codeMirrorMoreSuperOptions_wrapper\\").addClass(\\"codeMirror_editor_fullScreen\\");\\n          window[getCodeMirrorCredential().thisCodeMirrorId].refresh()\\n        }\\n      },\\n      onPostRender:function(){\\n        \\/\\/ $(\\".mce-codeMirrorMoreSuperOptions .mce-caret\\").remove();\\n        $(document).on(\\"mouseenter click\\", \\".codeMirror_wrapper_modx\\", function () {\\n          if(!$(this).find(\\"#codeMirrorMoreSuperOptions_wrapper\\").length){\\n            $(\\"#codeMirrorMoreSuperOptions_wrapper\\").prependTo($(this)).fadeIn();\\n            codeMirrorMoreSuperOptions();\\n          }\\n        })\\n      }\\n    }).renderTo(document.getElementById(\\"codeMirrorMoreSuperOptions_wrapper_sub\\"));\\n    tinymce.ui.Factory.create({\\n      type: \'listbox\',\\n      icon: \'code\',\\n      classes: \'codeMirrorMoreSuperOptionsMODE\',\\n      tooltip: \'Syntax \\/ Mode\',\\n      menu: codeMirrorMoreSuperOptionsToolButtonMODE,\\n      onPostRender: function(){\\n        $(\\".mce-codeMirrorMoreSuperOptionsMODE .mce-caret\\").remove();\\n        $(\\".mce-codeMirrorMoreSuperOptionsMODE .mce-txt\\").remove();\\n      },\\n      onselect: function(){\\n        window[getCodeMirrorCredential().thisCodeMirrorId].setOption(\\"mode\\", this.value())\\n        CodeMirror.autoLoadMode(window[getCodeMirrorCredential().thisCodeMirrorId], this.value());\\n        window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n        getCodeMirrorCredential().thisSink.text(this.value())\\n        $(\\".mce-codeMirrorMoreSuperOptionsMODE .mce-txt\\").remove();\\n      }\\n    }).renderTo(document.getElementById(\\"codeMirrorMoreSuperOptions_wrapper_sub\\"));\\n\\n    tinymce.ui.Factory.create({\\n      type: \'menubutton\',\\n      classes: \'codeMirrorMoreSuperOptionsMORE\',\\n      tooltip: \'Themes and more Options\',\\n      onPostRender:function(){\\n        \\/\\/ $(\\".mce-codeMirrorMoreSuperOptionsMORE .mce-caret\\").remove();\\n      },\\n      menu: [\\n      \\/\\/ {\\n      \\/\\/   text: \\"Show Invisibles\\",\\n      \\/\\/   classes: \\"setShowInvisibles\\",\\n      \\/\\/   onclick: function(){\\n      \\/\\/     if(window[getCodeMirrorCredential().thisCodeMirrorId].getOption(\\"showInvisibles\\")){\\n      \\/\\/       window[getCodeMirrorCredential().thisCodeMirrorId].setShowInvisibles(false);\\n      \\/\\/     }\\n      \\/\\/     else{\\n      \\/\\/       window[getCodeMirrorCredential().thisCodeMirrorId].setShowInvisibles(true);\\n      \\/\\/     }\\n      \\/\\/   }\\n      \\/\\/ },\\n      {\\n        text: \\"Refresh Editor\\",\\n        onclick: function(){\\n          window[getCodeMirrorCredential().thisCodeMirrorId].refresh();\\n        }\\n      },\\n      {\\n        text: \\"Soft Wrap\\",\\n        menu: codeMirrorMoreSuperOptionsToolButtonWRAP\\n      },\\n      {\\n        text: \\"Max Height\\",\\n        menu: codeMirrorMoreSuperOptionsToolButtonHEIGHT\\n      },\\n      {\\n        text: \\"Theme\\",\\n        menu: codeMirrorMoreSuperOptionsToolButtonTHEME\\n      },\\n      {\\n        text: \\"Font Size\\",\\n        menu: codeMirrorMoreSuperOptionsToolButtonFONT,\\n      },\\n      ],\\n    }).renderTo(document.getElementById(\\"codeMirrorMoreSuperOptions_wrapper_sub\\"));\\n    if(tinymce.editors.length < 1){\\n      \\/\\/ fileManagerTopNavModalSkin = MODx.config.assets_url+\\"components\\/tinymcewrapper\\/tinymceskins\\/modxPericles\\/\\"+\\"skin.min.css\\";\\n      tinymce.DOM.loadCSS(fileManagerTopNavModalSkin+\\"\\/skin.min.css\\");\\n    }\\n  }\\n}\\n\\/\\/ ************************** END Kitchen Sink **************************\\n\\n\\n\\/*#######################################################################################\\n   *************** MODX INIT : load applicable JS and CSS files ***************\\n#######################################################################################*\\/\\n\\/*-------------------\\nmore jargon underneath\\nload or not load what files you want to use\\n-----------------------------------------------------------*\\/\\n\\n\\n\\/\\/load applicable CSS files\\nfunction loadcss(filename){\\n  var fileref=document.createElement(\\"link\\")\\n  fileref.setAttribute(\\"rel\\", \\"stylesheet\\")\\n  fileref.setAttribute(\\"type\\", \\"text\\/css\\")\\n  fileref.setAttribute(\\"href\\", filename)\\n  if (typeof fileref!=\\"undefined\\"){\\n    document.getElementsByTagName(\\"head\\")[0].appendChild(fileref);\\n   }\\n}\\n\\nfunction loadThemCSS(){\\n  loadcss(\'[[+CodeMirrorSrc]]codemirror.min.css\');\\n  loadcss(\'[[+CodeMirrorSrc]]addon\\/dialog\\/dialog.css\');\\n  loadcss(\'[[+CodeMirrorSrc]]addon\\/search\\/matchesonscrollbar.css\');\\n  loadcss(\'[[+CodeMirrorSrc]]addon\\/display\\/fullscreen.css\');\\n  loadcss(\'[[+CodeMirrorSrc]]addon\\/fold\\/foldgutter.css\');\\n  [[+CodeMirrorTHEME:notempty=`loadcss(\'[[+CodeMirrorSrc]]theme\\/[[+CodeMirrorTHEME]].css\');`]]\\n}\\nloadThemCSS();\\nCodeMirror.modeURL = \\"[[+CodeMirrorSrc]]mode\\/%N\\/%N.js\\";\\n\\n\\/\\/load applicable JS files\\nExt.Loader.load([\\n  \'[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/codemirror\\/emmet.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/wrap\\/hardwrap.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/selection\\/active-line.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/search\\/searchcursor.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/scroll\\/annotatescrollbar.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/search\\/matchesonscrollbar.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/search\\/jump-to-line.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/search\\/search.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/dialog\\/dialog.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/hint\\/show-hint.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/hint\\/html-hint.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/hint\\/xml-hint.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/edit\\/closetag.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/edit\\/trailingspace.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/display\\/fullscreen.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/fold\\/foldcode.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/fold\\/foldgutter.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/fold\\/brace-fold.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/fold\\/xml-fold.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/fold\\/comment-fold.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/edit\\/matchbrackets.min.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/lint\\/lint.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/lint\\/css-lint.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/lint\\/json-lint.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/lint\\/javascript-lint.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/lint\\/css-lint.js\',\\n  \'[[+CodeMirrorSrc]]addon\\/mode\\/loadmode.js\',\\n  \'[[+CodeMirrorSrc]]mode\\/meta.js\'\\n ],\\n  function() {\\n   Ext.onReady(function () {\\n    codeMirrorTextareas();\\n   \\/\\/ })\\n   },this,{delay:50})\\n  },\\n  this,\\n  \'preserveOrder\'\\n);\\n\\nemmetForCodeMirrorIsLoaded = true; \\/\\/ this helps other CodeMirror implementations to piggy-back on this emmet\\n"}',
        'guid' => '3759f8ec1142fffb9c2b0931825b877e',
        'native_key' => 8,
        'signature' => '7610d730acc8e542c3b443588e47b620',
      ),
      '386c7126f618510fe5e9233eb5fabd1c' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":9,"source":0,"property_preprocess":0,"name":"TinymceWrapperAce","description":"A simple chunk to teach you how to totally dominate the usage of Ace according to all the possible specs provided on the official website.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/*\\n#######################################################\\nTinymceWrapperAce is a chunk to let any whoever dominate the initialization of the powerful Ace code editor.\\nThis tiny config can work any where and with anything in MODX.\\nIt will sync with TinyMCE if TinyMCE RTE is detected\\n\\nYours truly, donshakespeare @ MODX forums\\n#######################################################\\n\\n##Language \\/ Mode \\/ Syntax\\n\\"mode\\": \\"html\\", -- always html \\n\\"mode\\": \\"auto\\/html\\",\\n  -- (elements) static source extension dependent - fallback to html\\n  -- (resources) content type (mimetype) dependent - fallsback to html\\n\\n##max-height of editor in lines\\n\\"maxHeightLines\\": integer \\/ \\"textarea\\" \\/ \\"Infinity\\",\\n  -- integer - e.g 10 means editor will be 10 lines in height\\n  -- \\"textarea\\" - editor will borrow the fixed height of its original MODX textarea and will auto overflow\\n  -- \\"Infiinity\\" - editor will keep growing according to the height of its content.\\n*\\/\\n\\n\\naceTextareasIDorCLASS = [\\n  {\\n    \\"name\\": \\"introtext\\",\\n    \\"selector\\": \\"#modx-resource-introtext\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"textarea\\",\\n  },\\n  {\\n    \\"name\\": \\"description\\",\\n    \\"selector\\": \\"#modx-resource-description\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"textarea\\"\\n  },\\n  {\\n    \\"name\\": \\"richtext\\",\\n    \\"selector\\": \\".modx-richtext\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": 8,\\n  },\\n  {\\n    \\"name\\": \\"resource_content\\",\\n    \\"selector\\": \\"#ta\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"chunk\\",\\n    \\"selector\\": \\"#modx-chunk-snippet\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"template\\",\\n    \\"selector\\": \\"#modx-template-content\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"snippet\\",\\n    \\"selector\\": \\"#modx-snippet-snippet\\",\\n    \\"mode\\": \\"auto\\/php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"plugin\\",\\n    \\"selector\\": \\"#modx-plugin-plugincode\\",\\n    \\"mode\\": \\"auto\\/php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"file\\",\\n    \\"selector\\": \\"#modx-file-content\\",\\n    \\"mode\\": \\"auto\\/css\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  }\\n];\\n\\n\\/\\/ all on-the-fly textareas attached to mouseenter event (e.g Quick update\\/create textareas)\\naceFlyTextareasIDorCLASS = [\\n  {\\n    \\"selector\\": \\"textarea[name=snippet]\\",\\n    \\"mode\\": \\"php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  }, {\\n    \\"selector\\": \\"textarea[name=content]\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  }, {\\n    \\"selector\\": \\"textarea[name=plugincode]\\",\\n    \\"mode\\": \\"php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  }\\n];\\n\\n\\/\\/extend if you like\\nmodxAceMimeTypes = {\\n  \'text\\/html\': \'html\',\\n  \'text\\/plain\': \'text\',\\n  \'text\\/css\': \'css\',\\n  \'text\\/javascript\': \'javascript\',\\n  \'application\\/javascript\': \'javascript\',\\n  \'text\\/x-less\': \'less\',\\n  \'application\\/xml\': \'xml\',\\n  \'text\\/xml\': \'xml\',\\n  \'application\\/json\': \'json\',\\n  \'text\\/x-markdown\': \'markdown\'\\n};\\n\\n\\n\\/\\/ actual Ace Init configuration (get all from official Ace site, oh yea - total freedom!!!)\\naceInnerInit = function(mode, theme, maxLines, wrap) {\\n  var inner = {\\n    maxLines: maxLines ? maxLines : \\"\\",\\n    minLines: 3,\\n    [[+AceTHEME:notempty=`theme: \\"ace\\/theme\\/[[+AceTHEME]]\\",`]]\\n    mode: mode,\\n    wrap: wrap,\\n    showPrintMargin: false,\\n    \\/\\/ showInvisibles :true,\\n    \\/\\/ enableEmmet: false,\\n    displayIndentGuides :true,\\n    fontSize: 15,\\n    tabSize: 2,\\n    useWorker: false\\n  }\\n  return inner;\\n};\\n\\n\\/*#######################################################################################\\n************************** abandon all fear - all ye who enter **************************\\n#######################################################################################*\\/\\n\\nmodxAceInit = function (elem, mode, maxLines, wrap, realFly){\\n  var originalTextarea = document.getElementById(elem);\\n  var maxLinesAce = maxLines;\\n  originalTextarea.style.display  = \\"none\\";\\n  if(maxLinesAce == \\"textarea\\"){\\n    var height = $(originalTextarea).height();\\n    var maxLinesAce = \\"\\";\\n  }\\n  var aceTempDiv =\\n    $(\'<div>\', {\\n      \'id\': \'ace_wrapper_\'+originalTextarea.id,\\n      \'class\': \'ace_wrapper_modx \'+realFly,\\n      \'data-ace\': \'ace_id_\'+originalTextarea.id,\\n      \'data-origin\': originalTextarea.id,\\n      \'data-mode\': mode,\\n      \'data-maxL\': maxLines,\\n      \'data-wrap\': wrap\\n    }).prepend(\\n      $(\'<span>\', {\\n        \'class\': \'aceKitchenSink\',\\n        \'text\': mode,\\n        \'title\': \'maxLine: \'+maxLines+\'... wrap: \'+wrap\\n      }),\\n      $(\'<div>\', {\\n        \'id\': \'ace_id_\'+originalTextarea.id,\\n        \\/\\/ \'class\': originalTextarea.className,\\n        \'width\': \\"auto\\",\\n        \'height\': height ? height : \\"\\",\\n        \'data-origin\': originalTextarea.id\\n      })\\n    ).hide().insertBefore(originalTextarea);\\n  \\/\\/ var aceTempDiv =\\n  \\/\\/     $(\'<div>\', {\\n  \\/\\/       \'id\': \'ace_id_\'+originalTextarea.id,\\n  \\/\\/       \'class\': originalTextarea.className,\\n  \\/\\/       \'width\': \\"auto\\",\\n  \\/\\/       \'height\': height ? height : \\"\\",\\n  \\/\\/       \'data-origin\': originalTextarea.id\\n  \\/\\/     }).insertBefore(originalTextarea);\\n  \\/\\/ var aceEditor = ace.edit(aceTempDiv[0]);\\n\\n  var aceEditor = ace.edit(\'ace_id_\'+originalTextarea.id);\\n  aceEditor.$blockScrolling = Infinity;\\n  aceEditor.setOptions(aceInnerInit(\\"ace\\/mode\\/\\"+mode, \\"\\", maxLinesAce, wrap));\\n  aceEditor.getSession().setValue(originalTextarea.value);\\n  aceEditor.setAutoScrollEditorIntoView(true);\\n  $(\'#ace_wrapper_\'+originalTextarea.id).delay(100).fadeIn();\\n  setTimeout(function(){\\n    aceEditor.resize();\\n  },200)\\n  aceSetContentsilentMODX = false;\\n  aceEditor.on(\\"focus\\", function() {\\n    if(typeof tinymce !== \\"undefined\\" && tinymce.get(elem)){\\n      tinymce.get(elem).on(\\"keyup change\\", function() {\\n        if($(\\"#ace_id_\\"+originalTextarea.id).length){\\n          aceSetContentsilentMODX = true;\\n          aceEditor.setValue(tinymce.get(elem).getContent());\\n          aceSetContentsilentMODX = false;\\n        }\\n      })\\n    }\\n  })\\n  aceEditor.on(\\"change\\", function() {\\n    if(!aceEditor.getOption(\\"useWorker\\")){\\n      aceEditor.getSession().setUseWorker(true);\\n    }\\n    if (aceSetContentsilentMODX){\\n      return;\\n    }\\n    else{\\n      originalTextarea.value = aceEditor.getValue();\\n      if(typeof tinymce !== \\"undefined\\" && tinymce.get(elem)){\\n        tinymce.get(elem).setContent(aceEditor.getValue());\\n      }\\n    }\\n  })\\n  $(originalTextarea).parents(\\".modx-tv\\").find(\\".modx-tv-reset\\").on(\\"click\\", function(){\\n    setTimeout(function(){\\n      aceEditor.getSession().setValue(originalTextarea.value);\\n      aceEditor.resize();\\n    },200)\\n  });\\n  $(originalTextarea).on(\\"keyup change\\", function() {\\n    aceSetContentsilentMODX = true;\\n    aceEditor.setValue($(this).val());\\n    aceSetContentsilentMODX = false;\\n   })\\n\\n  if($(\'#ace_wrapper_\'+originalTextarea.id).hasClass(\\"twAceQuickFly\\")){\\n    aceEditor.commands.addCommand({\\n      name: \'saveFile\',\\n      bindKey: {\\n        win: \'Ctrl-S\',\\n        mac: \'Command-S\',\\n        sender: \'editor|cli\'\\n      },\\n      exec: function(env, args, request) {\\n        $(\'#ace_wrapper_\'+originalTextarea.id).parents(\'.modx-window\').find(\'button:contains(\\"Save\\")\').first().trigger(\\"click\\");\\n      }\\n    });\\n  }\\n}\\nfunction changeMyButton(thisButton,id,mode,maxLines,wrap,realFly){\\n  if($(thisButton).hasClass(\\"aceActive\\")){\\n    if($(\\"#\\"+id).is(\':visible\') ){\\n      $(thisButton).find(\\"button\\").text(\\"Remove Ace\\");\\n      $(thisButton).removeClass(\\"aceActive\\");\\n      modxAceInit(id,mode,maxLines,wrap,realFly)\\n    }\\n  }\\n  else{\\n    $(thisButton).addClass(\\"aceActive\\");\\n    $(thisButton).find(\\"button\\").text(\\"Edit With Ace\\");\\n    ace.edit(\\"ace_id_\\"+id).destroy()\\n    $(\\"#ace_wrapper_\\"+id).remove();\\n    $(\\"#\\"+id).fadeIn();\\n  }\\n}\\n\\nfunction splitMyJoint(val,joint,index) {\\n  var item = val.split(joint);\\n  return item[index];\\n}\\n\\nfunction getAceCredential() {\\n  var thisWrap = $(\\"#aceMoreSuperOptions_wrapper\\").parent();\\n  var thisSink = thisWrap.find(\\".aceKitchenSink\\");\\n  var originalTextareaId = thisWrap.data(\\"origin\\");\\n  var thisAceId = thisWrap.data(\\"ace\\");\\n  return {\\n      thisWrap: thisWrap,\\n      thisSink: thisSink,\\n      originalTextareaId: originalTextareaId,\\n      thisAceId: thisAceId,\\n    }\\n}\\n\\nfunction autoDetectMode(filePath){\\n  var modelist = ace.require(\\"ace\\/ext\\/modelist\\");\\n  var mode = modelist.getModeForPath(filePath).mode;\\n  return splitMyJoint(mode,\\"\\/\\",2); \\/\\/auto defaults to text mode\\n}\\n\\nfunction grabMeAnExtension(val) {\\n  if (modxAceMimeTypes.hasOwnProperty(val)) {\\n    return(modxAceMimeTypes[val]);\\n    return false;\\n  }\\n}\\n\\nfunction aceTextareas(){\\n  var mainCSSace = \'<style id=mainCSSace>.x-window-body,.x-tab-panel{overflow-x:hidden!important;}#aceMoreSuperOptions_wrapper{position:absolute!important;z-index:9!important;right:10px;top:-20px;}#aceMoreSuperOptions_wrapper .mce-listbox button{padding-right:10px!important;}#aceMoreSuperOptions_wrapper .mce-btn-has-text .mce-ico{padding-right:0!important;}#aceMoreSuperOptions_wrapper.ace_editor_fullScreen{position:fixed!important;right:23px;}#aceMoreSuperOptions_wrapper_boss{float:right;cursor:pointer;}#aceMoreSuperOptions_wrapper_boss button{padding:0;}#aceMoreSuperOptions_wrapper_sub {margin-top:24px;}.ace_wrapper_modx.ace_editor_fullScreen{position:fixed;top:0;width:100%;height:100%;left:0;right:0;bottom:0;z-index:26;background:#fff;overflow: auto;}.aceKitchenSink{position:absolute;background: #fff;color: #000;padding: 0px 6px;border-radius: 8px 0 8px 0;top: -20px;right:30px;z-index:9;font-size:12px;font-weight:bold;border:1px solid #808080;font-style:italic;}<\\/style>\';\\n  if(!$(\\"head #mainCSSace\\").length){\\n    $(\'head\').append(mainCSSace);\\n  }\\n  \\/\\/all textareas ... that are present on page load\\n  $.each(aceTextareasIDorCLASS, function() {\\n    if($(this.selector).length){\\n      $(this.selector).parent().addClass(\\"twAceParent\\");\\n      var twAceRealOrFly = \\"twAceReal\\";\\n      var elemAce = $(this.selector);\\n      var mode = this.mode;\\n      var height = this.maxHeightLines;\\n      var wrap = this.wrap;\\n      if(this.name == \\"resource_content\\" && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var mode = splitMyJoint(this.mode,\\"\\/\\",1);\\n        if(typeof twGetResourceContentType !== \\"undefined\\" && twGetResourceContentType !== \\"\\"){\\n          var mode = grabMeAnExtension(twGetResourceContentType); \\/\\/twGetResourceContentType value is supplied by serverside plugin\\n        }\\n      }\\n      else if((this.name == \\"chunk\\" || this.name == \\"snippet\\" || this.name == \\"plugin\\" || this.name == \\"template\\") && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var mode = splitMyJoint(this.mode,\\"\\/\\",1);\\n        if($(\\"#modx-\\"+this.name+\\"-static-file\\").length && $(\\"#modx-\\"+this.name+\\"-static-file\\").val() !== \\"\\"){\\n          var filePath = $(\\"#modx-\\"+this.name+\\"-static-file\\").val();\\n          var mode = autoDetectMode(filePath);\\n        }\\n      }\\n      else if(this.name == \\"file\\" && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var filePath = $(\\"#modx-file-name\\").val();\\n        var mode = autoDetectMode(filePath);\\n      }\\n      $(this.selector).each(function(){ \\/\\/ for the sake of .modx-richtext and other classnames provided\\n        var elemAceId = $(this).attr(\\"id\\");\\n        modxAceInit(elemAceId,mode,height,wrap,twAceRealOrFly);\\n      })\\n    }\\n  });\\n\\n  \\/\\/all textareas added dynamically to the DOM ... quick create\\/update and anything else\\n  $(document).on(\\"mouseenter\\", \\".modx-window\\", function () {\\n    $this = $(this);\\n    $.each(aceFlyTextareasIDorCLASS, function() {\\n      if($this.find(this.selector).length){\\n        var thisTextarea = $this.find(this.selector);\\n        thisTextarea.parent().addClass(\\"twAceParent\\");\\n        twElemAceId = thisTextarea.attr(\\"id\\");\\n        twAceMode = this.mode;\\n        twAceRealOrFly = \\"twAceQuickFly\\";\\n        if($this.find(\\"input[name=path]\\").length){ \\/\\/ for quick edit existing files\\n          twAceMode = $this.find(\\"input[name=path]\\").val()\\n          twAceMode = autoDetectMode(twAceMode);\\n        }\\n        twAceHeight = this.maxHeightLines;\\n        twAceWrap = this.wrap;\\n        if(thisTextarea.is(\':visible\') && $this.find(\\"#ace_wrapper_\\"+twElemAceId).length < 1 && !$this.find(\\".tinyACE\\").length){\\n        \\/\\/ modxAceInit(twElemAceId,twAceMode,twAceHeight,twAceWrap,twAceRealOrFly) \\/\\/ to fire this automatically, comment the bellow\\n          $this.find(\\".x-toolbar-left-row\\").append(\\"<p onclick=changeMyButton(this,twElemAceId,twAceMode,twAceHeight,twAceWrap,twAceRealOrFly); class=\\\\\'tinyACE aceActive x-btn x-btn-small x-btn-icon-small-left x-btn-noicon\\\\\' unselectable=\\\\\'on\\\\\'><em><button class=\\\\\'x-btn-text\\\\\'>Edit with Ace<\\/button><\\/em><\\/p>\\");\\n        }\\n      }\\n    });\\n  });\\n  if (typeof aceMoreSuperOptions == \'function\') { \\n    aceMoreSuperOptions();\\n  }\\n}\\n\\n\\/*#######################################################################################\\n     *********** Begin Kitchen Sink  (place in chunk or external file ***********\\n#######################################################################################*\\/\\n\\/\\/ font size \\/ themes \\/ height etc\\nfunction setAceSetTheme(){\\n  var val = this.text().replace(\\/\\\\s+\\/g, \'_\').toLowerCase();\\n  ace.edit(getAceCredential().thisAceId).setTheme(\\"ace\\/theme\\/\\"+val);\\n}\\n\\/\\/ kitchen sink\\nfunction setAceSetFont(){\\n  ace.edit(getAceCredential().thisAceId).setFontSize(this.text());\\n  ace.edit(getAceCredential().thisAceId).resize();\\n}\\n\\/\\/ kitchen sink\\nfunction setAceSetWrap(){\\n  ace.edit(getAceCredential().thisAceId).setOption(\\"wrap\\", this.text());\\n  ace.edit(getAceCredential().thisAceId).resize();\\n}\\n\\/\\/ kitchen sink\\nfunction setAceSetHeight(){\\n  var thisTextarea = getAceCredential().originalTextareaId;\\n  var option = this.text();\\n  if(option == \\"Textarea\\"){\\n    ace.edit(getAceCredential().thisAceId).setOption(\\"maxLines\\", false);\\n    $(\\"#\\"+getAceCredential().thisAceId).height( $(\\"#\\"+thisTextarea).height());\\n    ace.edit(getAceCredential().thisAceId).resize();\\n  }\\n  else {\\n    ace.edit(getAceCredential().thisAceId).setOption(\\"maxLines\\", this.text());\\n    ace.edit(getAceCredential().thisAceId).resize();\\n  }\\n}\\n\\n\\n\\/\\/ kitchen sink\\n\\/\\/ mode \\/ syntax \\/ language -- add as many as you like\\naceMoreSuperOptionsToolButtonMODE =[\\n  {text: \'--- MOST COMMON ---\', value: \'\', disabled: true, selected: false, active: false},\\n  {text: \'HTML\', value: \'html\'},\\n  {text: \'Markdown\', value: \'markdown\'},\\n  {text: \'CSS\', value: \'css\'},\\n  {text: \'PHP\', value: \'php\'},\\n  {text: \'JavaScript\', value: \'javascript\'},\\n  {text: \'JSON\', value: \'json\'},\\n  {text: \'Text\', value: \'text\'},\\n  {text: \'LESS\', value: \'less\'},\\n  {text: \'SASS\', value: \'sass\'},\\n  {text: \'SCSS\', value: \'scss\'},\\n  {text: \'Smarty\', value: \'smarty\'},\\n  {text: \'SVG\', value: \'svg\'},\\n  {text: \'Twig\', value: \'twig\'},\\n  {text: \'XML\', value: \'xml\'},\\n  {text: \'--- ALL SYNTAX ---\', value: \'\', disabled: true, selected: false, active: false},\\n  {text: \'ABAP\', value:\'abap\'},\\n  {text: \'ABC\', value:\'abc\'},\\n  {text: \'ActionScript\', value:\'actionscript\'},\\n  {text: \'ADA\', value:\'ada\'},\\n  {text: \'Apache\', value:\'apache_conf\'},\\n  {text: \'AsciiDoc\', value:\'asciidoc\'},\\n  {text: \'Assembly\', value:\'assembly_x86\'},\\n  {text: \'AutoHotKey\', value:\'autohotkey\'},\\n  {text: \'BatchFile\', value:\'batchfile\'},\\n  {text: \'C\', value:\'c_cpp\'},\\n  {text: \'C9Search\', value:\'c9search\'},\\n  {text: \'Cirru\', value:\'cirru\'},\\n  {text: \'Clojure\', value:\'clojure\'},\\n  {text: \'Cobol\', value:\'cobol\'},\\n  {text: \'CoffeeScript\', value:\'coffee\'},\\n  {text: \'ColdFusion\', value:\'coldfusion\'},\\n  {text: \'C\', value:\'csharp\'},\\n  {text: \'CSS\', value:\'css\'},\\n  {text: \'Curly\', value:\'curly\'},\\n  {text: \'D\', value:\'d\'},\\n  {text: \'Dart\', value:\'dart\'},\\n  {text: \'Diff\', value:\'diff\'},\\n  {text: \'Dockerfile\', value:\'dockerfile\'},\\n  {text: \'Dot\', value:\'dot\'},\\n  {text: \'Eiffel\', value:\'eiffel\'},\\n  {text: \'EJS\', value:\'ejs\'},\\n  {text: \'Elixir\', value:\'elixir\'},\\n  {text: \'Elm\', value:\'elm\'},\\n  {text: \'Erlang\', value:\'erlang\'},\\n  {text: \'Forth\', value:\'forth\'},\\n  {text: \'FreeMarker\', value:\'ftl\'},\\n  {text: \'Gcode\', value:\'gcode\'},\\n  {text: \'Gherkin\', value:\'gherkin\'},\\n  {text: \'Gitignore\', value:\'gitignore\'},\\n  {text: \'Glsl\', value:\'glsl\'},\\n  {text: \'Gobstones\', value:\'gobstones\'},\\n  {text: \'Go\', value:\'golang\'},\\n  {text: \'Groovy\', value:\'groovy\'},\\n  {text: \'HAML\', value:\'haml\'},\\n  {text: \'Handlebars\', value:\'handlebars\'},\\n  {text: \'Haskell\', value:\'haskell\'},\\n  {text: \'haXe\', value:\'haxe\'},\\n  {text: \'HTML\', value:\'html\'},\\n  {text: \'HTML\', value:\'html_elixir\'},\\n  {text: \'HTML\', value:\'html_ruby\'},\\n  {text: \'INI\', value:\'ini\'},\\n  {text: \'Io\', value:\'io\'},\\n  {text: \'Jack\', value:\'jack\'},\\n  {text: \'Jade\', value:\'jade\'},\\n  {text: \'Java\', value:\'java\'},\\n  {text: \'JavaScript\', value:\'javascript\'},\\n  {text: \'JSON\', value:\'json\'},\\n  {text: \'JSONiq\', value:\'jsoniq\'},\\n  {text: \'JSP\', value:\'jsp\'},\\n  {text: \'JSX\', value:\'jsx\'},\\n  {text: \'Julia\', value:\'julia\'},\\n  {text: \'LaTeX\', value:\'latex\'},\\n  {text: \'Lean\', value:\'lean\'},\\n  {text: \'LESS\', value:\'less\'},\\n  {text: \'Liquid\', value:\'liquid\'},\\n  {text: \'Lisp\', value:\'lisp\'},\\n  {text: \'LiveScript\', value:\'livescript\'},\\n  {text: \'LogiQL\', value:\'logiql\'},\\n  {text: \'LSL\', value:\'lsl\'},\\n  {text: \'Lua\', value:\'lua\'},\\n  {text: \'LuaPage\', value:\'luapage\'},\\n  {text: \'Lucene\', value:\'lucene\'},\\n  {text: \'Makefile\', value:\'makefile\'},\\n  {text: \'Markdown\', value:\'markdown\'},\\n  {text: \'Mask\', value:\'mask\'},\\n  {text: \'MATLAB\', value:\'matlab\'},\\n  {text: \'Maze\', value:\'maze\'},\\n  {text: \'MEL\', value:\'mel\'},\\n  {text: \'MUSHCode\', value:\'mushcode\'},\\n  {text: \'MySQL\', value:\'mysql\'},\\n  {text: \'Nix\', value:\'nix\'},\\n  {text: \'NSIS\', value:\'nsis\'},\\n  {text: \'Objective\', value:\'objectivec\'},\\n  {text: \'OCaml\', value:\'ocaml\'},\\n  {text: \'Pascal\', value:\'pascal\'},\\n  {text: \'Perl\', value:\'perl\'},\\n  {text: \'pgSQL\', value:\'pgsql\'},\\n  {text: \'PHP\', value:\'php\'},\\n  {text: \'Powershell\', value:\'powershell\'},\\n  {text: \'Praat\', value:\'praat\'},\\n  {text: \'Prolog\', value:\'prolog\'},\\n  {text: \'Properties\', value:\'properties\'},\\n  {text: \'Protobuf\', value:\'protobuf\'},\\n  {text: \'Python\', value:\'python\'},\\n  {text: \'R\', value:\'r\'},\\n  {text: \'Razor\', value:\'razor\'},\\n  {text: \'RDoc\', value:\'rdoc\'},\\n  {text: \'RHTML\', value:\'rhtml\'},\\n  {text: \'RST\', value:\'rst\'},\\n  {text: \'Ruby\', value:\'ruby\'},\\n  {text: \'Rust\', value:\'rust\'},\\n  {text: \'SASS\', value:\'sass\'},\\n  {text: \'SCAD\', value:\'scad\'},\\n  {text: \'Scala\', value:\'scala\'},\\n  {text: \'Scheme\', value:\'scheme\'},\\n  {text: \'SCSS\', value:\'scss\'},\\n  {text: \'SH\', value:\'sh\'},\\n  {text: \'SJS\', value:\'sjs\'},\\n  {text: \'Smarty\', value:\'smarty\'},\\n  {text: \'snippets\', value:\'snippets\'},\\n  {text: \'Soy\', value:\'soy_template\'},\\n  {text: \'Space\', value:\'space\'},\\n  {text: \'SQL\', value:\'sql\'},\\n  {text: \'SQLServer\', value:\'sqlserver\'},\\n  {text: \'Stylus\', value:\'stylus\'},\\n  {text: \'SVG\', value:\'svg\'},\\n  {text: \'Swift\', value:\'swift\'},\\n  {text: \'Tcl\', value:\'tcl\'},\\n  {text: \'Tex\', value:\'tex\'},\\n  {text: \'Text\', value:\'text\'},\\n  {text: \'Textile\', value:\'textile\'},\\n  {text: \'Toml\', value:\'toml\'},\\n  {text: \'Twig\', value:\'twig\'},\\n  {text: \'Typescript\', value:\'typescript\'},\\n  {text: \'Vala\', value:\'vala\'},\\n  {text: \'VBScript\', value:\'vbscript\'},\\n  {text: \'Velocity\', value:\'velocity\'},\\n  {text: \'Verilog\', value:\'verilog\'},\\n  {text: \'VHDL\', value:\'vhdl\'},\\n  {text: \'Wollok\', value:\'wollok\'},\\n  {text: \'XML\', value:\'xml\'},\\n  {text: \'XQuery\', value:\'xquery\'},\\n  {text: \'YAML\', value:\'yaml\'},\\n  {text: \'Django\', value:\'django\'}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change font size on the fly\\naceMoreSuperOptionsToolButtonFONT =[\\n  {text: \'10px\', onclick: setAceSetFont},\\n  {text: \'11px\', onclick: setAceSetFont},\\n  {text: \'12px\', onclick: setAceSetFont},\\n  {text: \'13px\', onclick: setAceSetFont},\\n  {text: \'14px\', onclick: setAceSetFont},\\n  {text: \'15px\', onclick: setAceSetFont},\\n  {text: \'16px\', onclick: setAceSetFont},\\n  {text: \'18px\', onclick: setAceSetFont},\\n  {text: \'20px\', onclick: setAceSetFont},\\n  {text: \'24px\', onclick: setAceSetFont}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change wrap style\\naceMoreSuperOptionsToolButtonWRAP =[\\n  {text: \'free\', onclick: setAceSetWrap},\\n  {text: \'40\', onclick: setAceSetWrap},\\n  {text: \'80\', onclick: setAceSetWrap},\\n  {text: \'off\', onclick: setAceSetWrap},\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change height\\/max lines\\naceMoreSuperOptionsToolButtonHEIGHT =[\\n  {text: \'1\', onclick: setAceSetHeight},\\n  {text: \'10\', onclick: setAceSetHeight},\\n  {text: \'Infinity\', onclick: setAceSetHeight},\\n  {text: \'Textarea\', onclick: setAceSetHeight}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change theme on the fly\\naceMoreSuperOptionsToolButtonTHEME = [\\n  {text: \'---- Bright ----\', disabled: true, selected: false},\\n  {text: \'Chrome\', onclick: setAceSetTheme},\\n  {text: \'Clouds\', onclick: setAceSetTheme},\\n  {text: \'Crimson Editor\', onclick: setAceSetTheme},\\n  {text: \'Dawn\', onclick: setAceSetTheme},\\n  {text: \'Dreamweaver\', onclick: setAceSetTheme},\\n  {text: \'Eclipse\', onclick: setAceSetTheme},\\n  {text: \'GitHub\', onclick: setAceSetTheme},\\n  {text: \'IPlastic\', onclick: setAceSetTheme},\\n  {text: \'Solarized Light\', onclick: setAceSetTheme},\\n  {text: \'TextMate\', onclick: setAceSetTheme},\\n  {text: \'Tomorrow\', onclick: setAceSetTheme},\\n  {text: \'XCode\', onclick: setAceSetTheme},\\n  {text: \'Kuroir\', onclick: setAceSetTheme},\\n  {text: \'KatzenMilch\', onclick: setAceSetTheme},\\n  {text: \'SQL Server\', onclick: setAceSetTheme},\\n  {text: \'---- Dark ----\', disabled: true, selected: false},\\n  {text: \'Ambiance\', onclick: setAceSetTheme},\\n  {text: \'Chaos\', onclick: setAceSetTheme},\\n  {text: \'Clouds Midnight\', onclick: setAceSetTheme},\\n  {text: \'Cobalt\', onclick: setAceSetTheme},\\n  {text: \'idle Fingers\', onclick: setAceSetTheme},\\n  {text: \'krTheme\', onclick: setAceSetTheme},\\n  {text: \'Merbivore\', onclick: setAceSetTheme},\\n  {text: \'Merbivore Soft\', onclick: setAceSetTheme},\\n  {text: \'Mono Industrial\', onclick: setAceSetTheme},\\n  {text: \'Monokai\', onclick: setAceSetTheme},\\n  {text: \'Pastel on dark\', onclick: setAceSetTheme},\\n  {text: \'Solarized Dark\', onclick: setAceSetTheme},\\n  {text: \'Terminal\', onclick: setAceSetTheme},\\n  {text: \'Tomorrow Night\', onclick: setAceSetTheme},\\n  {text: \'Tomorrow Night Blue\', onclick: setAceSetTheme},\\n  {text: \'Tomorrow Night Bright\', onclick: setAceSetTheme},\\n  {text: \'Tomorrow Night Eighties\', onclick: setAceSetTheme},\\n  {text: \'Twilight\', onclick: setAceSetTheme},\\n  {text: \'Vibrant Ink\', onclick: setAceSetTheme}\\n];\\n\\n\\/\\/ kitchen sink toolbar ini\\nfunction aceMoreSuperOptions(){\\n  if(typeof tinymce !== \\"undefined\\" && !$(\\"#aceMoreSuperOptions_wrapper\\").length){\\n    $(\\"body\\").append(\\"<div id=aceMoreSuperOptions_wrapper><div id=aceMoreSuperOptions_wrapper_boss><\\/div><div style=display:none; id=aceMoreSuperOptions_wrapper_sub><\\/div><\\/div>\\");\\n    tinymce.ui.Factory.create({\\n      type: \\"button\\",\\n      icon: \\"fullpage\\",\\n      classes:\\"moreAceAttr\\",\\n      tooltip: \\"Ace Settings...\\",\\n      onPostRender:function(){\\n        $(\\".mce-moreAceAttr\\").attr(\\"class\\",\\"mce-moreAceAttr\\");\\n        $(\\".mce-moreAceAttr button\\").contents().unwrap();\\n      },\\n      onclick: function(){\\n        if($(\'#aceMoreSuperOptions_wrapper_sub:hidden\').length){\\n          $(\'#aceMoreSuperOptions_wrapper_sub\').show()\\n          $(\'.mce-moreAceAttr\').addClass(\'mce-active\')\\n        }\\n        else{\\n          $(\'#aceMoreSuperOptions_wrapper_sub\').hide()\\n          $(\'.mce-moreAceAttr\').removeClass(\'mce-active\')\\n        }\\n      }\\n    }).renderTo(document.getElementById(\\"aceMoreSuperOptions_wrapper_boss\\"));\\n    tinymce.ui.Factory.create({\\n      type: \'button\',\\n      icon: \'fullscreen\',\\n      classes: \'aceMoreSuperOptionsFS\',\\n      tooltip: \'Fullscreen\',\\n      onclick: function(){\\n        if(getAceCredential().thisWrap.hasClass(\\"ace_editor_fullScreen\\")){\\n          getAceCredential().thisWrap.removeClass(\\"ace_editor_fullScreen\\");\\n          $(\\"#aceMoreSuperOptions_wrapper\\").removeClass(\\"ace_editor_fullScreen\\");\\n          ace.edit(getAceCredential().thisAceId).resize();\\n        }\\n        else{\\n          getAceCredential().thisWrap.addClass(\\"ace_editor_fullScreen\\")\\n          $(\\"#aceMoreSuperOptions_wrapper\\").addClass(\\"ace_editor_fullScreen\\");\\n          ace.edit(getAceCredential().thisAceId).resize();\\n        }\\n      },\\n      onPostRender:function(){\\n        \\/\\/ $(\\".mce-aceMoreSuperOptions .mce-caret\\").remove();\\n        $(document).on(\\"mouseenter click\\", \\".ace_wrapper_modx\\", function () {\\n          if(!$(this).find(\\"#aceMoreSuperOptions_wrapper\\").length){\\n            $(\\"#aceMoreSuperOptions_wrapper\\").prependTo($(this)).fadeIn();\\n            aceMoreSuperOptions();\\n          }\\n        })\\n      }\\n    }).renderTo(document.getElementById(\\"aceMoreSuperOptions_wrapper_sub\\"));\\n    tinymce.ui.Factory.create({\\n      type: \'listbox\',\\n      icon: \'code\',\\n      classes: \'aceMoreSuperOptionsMODE\',\\n      tooltip: \'Syntax \\/ Mode\',\\n      menu: aceMoreSuperOptionsToolButtonMODE,\\n      onPostRender: function(){\\n        $(\\".mce-aceMoreSuperOptionsMODE .mce-caret\\").remove();\\n        $(\\".mce-aceMoreSuperOptionsMODE .mce-txt\\").remove();\\n      },\\n      onselect: function(){\\n        ace.edit(getAceCredential().thisAceId).getSession().setMode(\\"ace\\/mode\\/\\"+this.value())\\n        ace.edit(getAceCredential().thisAceId).resize();\\n        getAceCredential().thisSink.text(this.value())\\n        $(\\".mce-aceMoreSuperOptionsMODE .mce-txt\\").remove();\\n      }\\n    }).renderTo(document.getElementById(\\"aceMoreSuperOptions_wrapper_sub\\"));\\n\\n    tinymce.ui.Factory.create({\\n      \\/\\/ icon: \\"fullpage\\",\\n      type: \'menubutton\',\\n      classes: \'aceMoreSuperOptionsMORE\',\\n      tooltip: \'Themes and more Options\',\\n      onPostRender:function(){\\n        \\/\\/ $(\\".mce-aceMoreSuperOptionsMORE .mce-caret\\").remove();\\n      },\\n      menu: [\\n      {\\n        text: \\"Show Invisibles\\",\\n        classes: \\"setShowInvisibles\\",\\n        onclick: function(){\\n          if(ace.edit(getAceCredential().thisAceId).getOption(\\"showInvisibles\\")){\\n            ace.edit(getAceCredential().thisAceId).setShowInvisibles(false);\\n          }\\n          else{\\n            ace.edit(getAceCredential().thisAceId).setShowInvisibles(true);\\n          }\\n        }\\n      },\\n      {\\n        text: \\"Scroll Past End\\",\\n        classes: \\"setScroll\\",\\n        onclick: function(){\\n          if(ace.edit(getAceCredential().thisAceId).getOption(\\"scrollPastEnd\\")){\\n            ace.edit(getAceCredential().thisAceId).setOption(\\"scrollPastEnd\\", false);\\n            ace.edit(getAceCredential().thisAceId).resize();\\n          }\\n          else{\\n            ace.edit(getAceCredential().thisAceId).setOption(\\"scrollPastEnd\\", true);\\n            ace.edit(getAceCredential().thisAceId).resize();\\n          }\\n        }\\n      },\\n      {\\n        text: \\"Refresh Editor\\",\\n        onclick: function(){\\n          ace.edit(getAceCredential().thisAceId).resize();\\n        }\\n      },\\n      {\\n        text: \\"Soft Wrap\\",\\n        menu: aceMoreSuperOptionsToolButtonWRAP\\n      },\\n      {\\n        text: \\"Max Height\\",\\n        menu: aceMoreSuperOptionsToolButtonHEIGHT\\n      },\\n      {\\n        text: \\"Theme\\",\\n        menu: aceMoreSuperOptionsToolButtonTHEME\\n      },\\n      {\\n        text: \\"Font Size\\",\\n        menu: aceMoreSuperOptionsToolButtonFONT,\\n      },\\n      ],\\n    }).renderTo(document.getElementById(\\"aceMoreSuperOptions_wrapper_sub\\"));\\n    if(tinymce.editors.length < 1){\\n      \\/\\/ fileManagerTopNavModalSkin = MODx.config.assets_url+\\"components\\/tinymcewrapper\\/tinymceskins\\/modxPericles\\/\\"+\\"skin.min.css\\";\\n      tinymce.DOM.loadCSS(fileManagerTopNavModalSkin+\\"\\/skin.min.css\\");\\n    }\\n  }\\n}\\n\\/\\/ ************************** END Kitchen Sink **************************\\n\\n\\n\\/*#######################################################################################\\n   *************** MODX INIT : load applicable JS and CSS files ***************\\n#######################################################################################*\\/\\nExt.Loader.load([\\n  \'[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/ace\\/emmet.min.js\',\\n  \'[[+AceSrc]]ext-emmet.js\',\\n  \'[[+AceSrc]]ext-modelist.js\',\\n ],\\n  function() {\\n    Ext.onReady(function () {\\n      aceTextareas();\\n    \\/\\/ }) \\/\\/ use this instead of delay\\n    },this,{delay:50}) \\/\\/ delay 100 always works well\\n  }\\n)\\nemmetForAceIsLoaded = true; \\/\\/ this helps other Ace implementations to piggy-back on this emmet\\n","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"\\/*\\n#######################################################\\nTinymceWrapperAce is a chunk to let any whoever dominate the initialization of the powerful Ace code editor.\\nThis tiny config can work any where and with anything in MODX.\\nIt will sync with TinyMCE if TinyMCE RTE is detected\\n\\nYours truly, donshakespeare @ MODX forums\\n#######################################################\\n\\n##Language \\/ Mode \\/ Syntax\\n\\"mode\\": \\"html\\", -- always html \\n\\"mode\\": \\"auto\\/html\\",\\n  -- (elements) static source extension dependent - fallback to html\\n  -- (resources) content type (mimetype) dependent - fallsback to html\\n\\n##max-height of editor in lines\\n\\"maxHeightLines\\": integer \\/ \\"textarea\\" \\/ \\"Infinity\\",\\n  -- integer - e.g 10 means editor will be 10 lines in height\\n  -- \\"textarea\\" - editor will borrow the fixed height of its original MODX textarea and will auto overflow\\n  -- \\"Infiinity\\" - editor will keep growing according to the height of its content.\\n*\\/\\n\\n\\naceTextareasIDorCLASS = [\\n  {\\n    \\"name\\": \\"introtext\\",\\n    \\"selector\\": \\"#modx-resource-introtext\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"textarea\\",\\n  },\\n  {\\n    \\"name\\": \\"description\\",\\n    \\"selector\\": \\"#modx-resource-description\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"textarea\\"\\n  },\\n  {\\n    \\"name\\": \\"richtext\\",\\n    \\"selector\\": \\".modx-richtext\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": 8,\\n  },\\n  {\\n    \\"name\\": \\"resource_content\\",\\n    \\"selector\\": \\"#ta\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"chunk\\",\\n    \\"selector\\": \\"#modx-chunk-snippet\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"template\\",\\n    \\"selector\\": \\"#modx-template-content\\",\\n    \\"mode\\": \\"auto\\/html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"snippet\\",\\n    \\"selector\\": \\"#modx-snippet-snippet\\",\\n    \\"mode\\": \\"auto\\/php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"plugin\\",\\n    \\"selector\\": \\"#modx-plugin-plugincode\\",\\n    \\"mode\\": \\"auto\\/php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  },\\n  {\\n    \\"name\\": \\"file\\",\\n    \\"selector\\": \\"#modx-file-content\\",\\n    \\"mode\\": \\"auto\\/css\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  }\\n];\\n\\n\\/\\/ all on-the-fly textareas attached to mouseenter event (e.g Quick update\\/create textareas)\\naceFlyTextareasIDorCLASS = [\\n  {\\n    \\"selector\\": \\"textarea[name=snippet]\\",\\n    \\"mode\\": \\"php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  }, {\\n    \\"selector\\": \\"textarea[name=content]\\",\\n    \\"mode\\": \\"html\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  }, {\\n    \\"selector\\": \\"textarea[name=plugincode]\\",\\n    \\"mode\\": \\"php\\",\\n    \\"wrap\\": \\"free\\",\\n    \\"maxHeightLines\\": \\"Infinity\\",\\n  }\\n];\\n\\n\\/\\/extend if you like\\nmodxAceMimeTypes = {\\n  \'text\\/html\': \'html\',\\n  \'text\\/plain\': \'text\',\\n  \'text\\/css\': \'css\',\\n  \'text\\/javascript\': \'javascript\',\\n  \'application\\/javascript\': \'javascript\',\\n  \'text\\/x-less\': \'less\',\\n  \'application\\/xml\': \'xml\',\\n  \'text\\/xml\': \'xml\',\\n  \'application\\/json\': \'json\',\\n  \'text\\/x-markdown\': \'markdown\'\\n};\\n\\n\\n\\/\\/ actual Ace Init configuration (get all from official Ace site, oh yea - total freedom!!!)\\naceInnerInit = function(mode, theme, maxLines, wrap) {\\n  var inner = {\\n    maxLines: maxLines ? maxLines : \\"\\",\\n    minLines: 3,\\n    [[+AceTHEME:notempty=`theme: \\"ace\\/theme\\/[[+AceTHEME]]\\",`]]\\n    mode: mode,\\n    wrap: wrap,\\n    showPrintMargin: false,\\n    \\/\\/ showInvisibles :true,\\n    \\/\\/ enableEmmet: false,\\n    displayIndentGuides :true,\\n    fontSize: 15,\\n    tabSize: 2,\\n    useWorker: false\\n  }\\n  return inner;\\n};\\n\\n\\/*#######################################################################################\\n************************** abandon all fear - all ye who enter **************************\\n#######################################################################################*\\/\\n\\nmodxAceInit = function (elem, mode, maxLines, wrap, realFly){\\n  var originalTextarea = document.getElementById(elem);\\n  var maxLinesAce = maxLines;\\n  originalTextarea.style.display  = \\"none\\";\\n  if(maxLinesAce == \\"textarea\\"){\\n    var height = $(originalTextarea).height();\\n    var maxLinesAce = \\"\\";\\n  }\\n  var aceTempDiv =\\n    $(\'<div>\', {\\n      \'id\': \'ace_wrapper_\'+originalTextarea.id,\\n      \'class\': \'ace_wrapper_modx \'+realFly,\\n      \'data-ace\': \'ace_id_\'+originalTextarea.id,\\n      \'data-origin\': originalTextarea.id,\\n      \'data-mode\': mode,\\n      \'data-maxL\': maxLines,\\n      \'data-wrap\': wrap\\n    }).prepend(\\n      $(\'<span>\', {\\n        \'class\': \'aceKitchenSink\',\\n        \'text\': mode,\\n        \'title\': \'maxLine: \'+maxLines+\'... wrap: \'+wrap\\n      }),\\n      $(\'<div>\', {\\n        \'id\': \'ace_id_\'+originalTextarea.id,\\n        \\/\\/ \'class\': originalTextarea.className,\\n        \'width\': \\"auto\\",\\n        \'height\': height ? height : \\"\\",\\n        \'data-origin\': originalTextarea.id\\n      })\\n    ).hide().insertBefore(originalTextarea);\\n  \\/\\/ var aceTempDiv =\\n  \\/\\/     $(\'<div>\', {\\n  \\/\\/       \'id\': \'ace_id_\'+originalTextarea.id,\\n  \\/\\/       \'class\': originalTextarea.className,\\n  \\/\\/       \'width\': \\"auto\\",\\n  \\/\\/       \'height\': height ? height : \\"\\",\\n  \\/\\/       \'data-origin\': originalTextarea.id\\n  \\/\\/     }).insertBefore(originalTextarea);\\n  \\/\\/ var aceEditor = ace.edit(aceTempDiv[0]);\\n\\n  var aceEditor = ace.edit(\'ace_id_\'+originalTextarea.id);\\n  aceEditor.$blockScrolling = Infinity;\\n  aceEditor.setOptions(aceInnerInit(\\"ace\\/mode\\/\\"+mode, \\"\\", maxLinesAce, wrap));\\n  aceEditor.getSession().setValue(originalTextarea.value);\\n  aceEditor.setAutoScrollEditorIntoView(true);\\n  $(\'#ace_wrapper_\'+originalTextarea.id).delay(100).fadeIn();\\n  setTimeout(function(){\\n    aceEditor.resize();\\n  },200)\\n  aceSetContentsilentMODX = false;\\n  aceEditor.on(\\"focus\\", function() {\\n    if(typeof tinymce !== \\"undefined\\" && tinymce.get(elem)){\\n      tinymce.get(elem).on(\\"keyup change\\", function() {\\n        if($(\\"#ace_id_\\"+originalTextarea.id).length){\\n          aceSetContentsilentMODX = true;\\n          aceEditor.setValue(tinymce.get(elem).getContent());\\n          aceSetContentsilentMODX = false;\\n        }\\n      })\\n    }\\n  })\\n  aceEditor.on(\\"change\\", function() {\\n    if(!aceEditor.getOption(\\"useWorker\\")){\\n      aceEditor.getSession().setUseWorker(true);\\n    }\\n    if (aceSetContentsilentMODX){\\n      return;\\n    }\\n    else{\\n      originalTextarea.value = aceEditor.getValue();\\n      if(typeof tinymce !== \\"undefined\\" && tinymce.get(elem)){\\n        tinymce.get(elem).setContent(aceEditor.getValue());\\n      }\\n    }\\n  })\\n  $(originalTextarea).parents(\\".modx-tv\\").find(\\".modx-tv-reset\\").on(\\"click\\", function(){\\n    setTimeout(function(){\\n      aceEditor.getSession().setValue(originalTextarea.value);\\n      aceEditor.resize();\\n    },200)\\n  });\\n  $(originalTextarea).on(\\"keyup change\\", function() {\\n    aceSetContentsilentMODX = true;\\n    aceEditor.setValue($(this).val());\\n    aceSetContentsilentMODX = false;\\n   })\\n\\n  if($(\'#ace_wrapper_\'+originalTextarea.id).hasClass(\\"twAceQuickFly\\")){\\n    aceEditor.commands.addCommand({\\n      name: \'saveFile\',\\n      bindKey: {\\n        win: \'Ctrl-S\',\\n        mac: \'Command-S\',\\n        sender: \'editor|cli\'\\n      },\\n      exec: function(env, args, request) {\\n        $(\'#ace_wrapper_\'+originalTextarea.id).parents(\'.modx-window\').find(\'button:contains(\\"Save\\")\').first().trigger(\\"click\\");\\n      }\\n    });\\n  }\\n}\\nfunction changeMyButton(thisButton,id,mode,maxLines,wrap,realFly){\\n  if($(thisButton).hasClass(\\"aceActive\\")){\\n    if($(\\"#\\"+id).is(\':visible\') ){\\n      $(thisButton).find(\\"button\\").text(\\"Remove Ace\\");\\n      $(thisButton).removeClass(\\"aceActive\\");\\n      modxAceInit(id,mode,maxLines,wrap,realFly)\\n    }\\n  }\\n  else{\\n    $(thisButton).addClass(\\"aceActive\\");\\n    $(thisButton).find(\\"button\\").text(\\"Edit With Ace\\");\\n    ace.edit(\\"ace_id_\\"+id).destroy()\\n    $(\\"#ace_wrapper_\\"+id).remove();\\n    $(\\"#\\"+id).fadeIn();\\n  }\\n}\\n\\nfunction splitMyJoint(val,joint,index) {\\n  var item = val.split(joint);\\n  return item[index];\\n}\\n\\nfunction getAceCredential() {\\n  var thisWrap = $(\\"#aceMoreSuperOptions_wrapper\\").parent();\\n  var thisSink = thisWrap.find(\\".aceKitchenSink\\");\\n  var originalTextareaId = thisWrap.data(\\"origin\\");\\n  var thisAceId = thisWrap.data(\\"ace\\");\\n  return {\\n      thisWrap: thisWrap,\\n      thisSink: thisSink,\\n      originalTextareaId: originalTextareaId,\\n      thisAceId: thisAceId,\\n    }\\n}\\n\\nfunction autoDetectMode(filePath){\\n  var modelist = ace.require(\\"ace\\/ext\\/modelist\\");\\n  var mode = modelist.getModeForPath(filePath).mode;\\n  return splitMyJoint(mode,\\"\\/\\",2); \\/\\/auto defaults to text mode\\n}\\n\\nfunction grabMeAnExtension(val) {\\n  if (modxAceMimeTypes.hasOwnProperty(val)) {\\n    return(modxAceMimeTypes[val]);\\n    return false;\\n  }\\n}\\n\\nfunction aceTextareas(){\\n  var mainCSSace = \'<style id=mainCSSace>.x-window-body,.x-tab-panel{overflow-x:hidden!important;}#aceMoreSuperOptions_wrapper{position:absolute!important;z-index:9!important;right:10px;top:-20px;}#aceMoreSuperOptions_wrapper .mce-listbox button{padding-right:10px!important;}#aceMoreSuperOptions_wrapper .mce-btn-has-text .mce-ico{padding-right:0!important;}#aceMoreSuperOptions_wrapper.ace_editor_fullScreen{position:fixed!important;right:23px;}#aceMoreSuperOptions_wrapper_boss{float:right;cursor:pointer;}#aceMoreSuperOptions_wrapper_boss button{padding:0;}#aceMoreSuperOptions_wrapper_sub {margin-top:24px;}.ace_wrapper_modx.ace_editor_fullScreen{position:fixed;top:0;width:100%;height:100%;left:0;right:0;bottom:0;z-index:26;background:#fff;overflow: auto;}.aceKitchenSink{position:absolute;background: #fff;color: #000;padding: 0px 6px;border-radius: 8px 0 8px 0;top: -20px;right:30px;z-index:9;font-size:12px;font-weight:bold;border:1px solid #808080;font-style:italic;}<\\/style>\';\\n  if(!$(\\"head #mainCSSace\\").length){\\n    $(\'head\').append(mainCSSace);\\n  }\\n  \\/\\/all textareas ... that are present on page load\\n  $.each(aceTextareasIDorCLASS, function() {\\n    if($(this.selector).length){\\n      $(this.selector).parent().addClass(\\"twAceParent\\");\\n      var twAceRealOrFly = \\"twAceReal\\";\\n      var elemAce = $(this.selector);\\n      var mode = this.mode;\\n      var height = this.maxHeightLines;\\n      var wrap = this.wrap;\\n      if(this.name == \\"resource_content\\" && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var mode = splitMyJoint(this.mode,\\"\\/\\",1);\\n        if(typeof twGetResourceContentType !== \\"undefined\\" && twGetResourceContentType !== \\"\\"){\\n          var mode = grabMeAnExtension(twGetResourceContentType); \\/\\/twGetResourceContentType value is supplied by serverside plugin\\n        }\\n      }\\n      else if((this.name == \\"chunk\\" || this.name == \\"snippet\\" || this.name == \\"plugin\\" || this.name == \\"template\\") && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var mode = splitMyJoint(this.mode,\\"\\/\\",1);\\n        if($(\\"#modx-\\"+this.name+\\"-static-file\\").length && $(\\"#modx-\\"+this.name+\\"-static-file\\").val() !== \\"\\"){\\n          var filePath = $(\\"#modx-\\"+this.name+\\"-static-file\\").val();\\n          var mode = autoDetectMode(filePath);\\n        }\\n      }\\n      else if(this.name == \\"file\\" && this.mode.indexOf(\\"auto\\/\\") > -1){\\n        var filePath = $(\\"#modx-file-name\\").val();\\n        var mode = autoDetectMode(filePath);\\n      }\\n      $(this.selector).each(function(){ \\/\\/ for the sake of .modx-richtext and other classnames provided\\n        var elemAceId = $(this).attr(\\"id\\");\\n        modxAceInit(elemAceId,mode,height,wrap,twAceRealOrFly);\\n      })\\n    }\\n  });\\n\\n  \\/\\/all textareas added dynamically to the DOM ... quick create\\/update and anything else\\n  $(document).on(\\"mouseenter\\", \\".modx-window\\", function () {\\n    $this = $(this);\\n    $.each(aceFlyTextareasIDorCLASS, function() {\\n      if($this.find(this.selector).length){\\n        var thisTextarea = $this.find(this.selector);\\n        thisTextarea.parent().addClass(\\"twAceParent\\");\\n        twElemAceId = thisTextarea.attr(\\"id\\");\\n        twAceMode = this.mode;\\n        twAceRealOrFly = \\"twAceQuickFly\\";\\n        if($this.find(\\"input[name=path]\\").length){ \\/\\/ for quick edit existing files\\n          twAceMode = $this.find(\\"input[name=path]\\").val()\\n          twAceMode = autoDetectMode(twAceMode);\\n        }\\n        twAceHeight = this.maxHeightLines;\\n        twAceWrap = this.wrap;\\n        if(thisTextarea.is(\':visible\') && $this.find(\\"#ace_wrapper_\\"+twElemAceId).length < 1 && !$this.find(\\".tinyACE\\").length){\\n        \\/\\/ modxAceInit(twElemAceId,twAceMode,twAceHeight,twAceWrap,twAceRealOrFly) \\/\\/ to fire this automatically, comment the bellow\\n          $this.find(\\".x-toolbar-left-row\\").append(\\"<p onclick=changeMyButton(this,twElemAceId,twAceMode,twAceHeight,twAceWrap,twAceRealOrFly); class=\\\\\'tinyACE aceActive x-btn x-btn-small x-btn-icon-small-left x-btn-noicon\\\\\' unselectable=\\\\\'on\\\\\'><em><button class=\\\\\'x-btn-text\\\\\'>Edit with Ace<\\/button><\\/em><\\/p>\\");\\n        }\\n      }\\n    });\\n  });\\n  if (typeof aceMoreSuperOptions == \'function\') { \\n    aceMoreSuperOptions();\\n  }\\n}\\n\\n\\/*#######################################################################################\\n     *********** Begin Kitchen Sink  (place in chunk or external file ***********\\n#######################################################################################*\\/\\n\\/\\/ font size \\/ themes \\/ height etc\\nfunction setAceSetTheme(){\\n  var val = this.text().replace(\\/\\\\s+\\/g, \'_\').toLowerCase();\\n  ace.edit(getAceCredential().thisAceId).setTheme(\\"ace\\/theme\\/\\"+val);\\n}\\n\\/\\/ kitchen sink\\nfunction setAceSetFont(){\\n  ace.edit(getAceCredential().thisAceId).setFontSize(this.text());\\n  ace.edit(getAceCredential().thisAceId).resize();\\n}\\n\\/\\/ kitchen sink\\nfunction setAceSetWrap(){\\n  ace.edit(getAceCredential().thisAceId).setOption(\\"wrap\\", this.text());\\n  ace.edit(getAceCredential().thisAceId).resize();\\n}\\n\\/\\/ kitchen sink\\nfunction setAceSetHeight(){\\n  var thisTextarea = getAceCredential().originalTextareaId;\\n  var option = this.text();\\n  if(option == \\"Textarea\\"){\\n    ace.edit(getAceCredential().thisAceId).setOption(\\"maxLines\\", false);\\n    $(\\"#\\"+getAceCredential().thisAceId).height( $(\\"#\\"+thisTextarea).height());\\n    ace.edit(getAceCredential().thisAceId).resize();\\n  }\\n  else {\\n    ace.edit(getAceCredential().thisAceId).setOption(\\"maxLines\\", this.text());\\n    ace.edit(getAceCredential().thisAceId).resize();\\n  }\\n}\\n\\n\\n\\/\\/ kitchen sink\\n\\/\\/ mode \\/ syntax \\/ language -- add as many as you like\\naceMoreSuperOptionsToolButtonMODE =[\\n  {text: \'--- MOST COMMON ---\', value: \'\', disabled: true, selected: false, active: false},\\n  {text: \'HTML\', value: \'html\'},\\n  {text: \'Markdown\', value: \'markdown\'},\\n  {text: \'CSS\', value: \'css\'},\\n  {text: \'PHP\', value: \'php\'},\\n  {text: \'JavaScript\', value: \'javascript\'},\\n  {text: \'JSON\', value: \'json\'},\\n  {text: \'Text\', value: \'text\'},\\n  {text: \'LESS\', value: \'less\'},\\n  {text: \'SASS\', value: \'sass\'},\\n  {text: \'SCSS\', value: \'scss\'},\\n  {text: \'Smarty\', value: \'smarty\'},\\n  {text: \'SVG\', value: \'svg\'},\\n  {text: \'Twig\', value: \'twig\'},\\n  {text: \'XML\', value: \'xml\'},\\n  {text: \'--- ALL SYNTAX ---\', value: \'\', disabled: true, selected: false, active: false},\\n  {text: \'ABAP\', value:\'abap\'},\\n  {text: \'ABC\', value:\'abc\'},\\n  {text: \'ActionScript\', value:\'actionscript\'},\\n  {text: \'ADA\', value:\'ada\'},\\n  {text: \'Apache\', value:\'apache_conf\'},\\n  {text: \'AsciiDoc\', value:\'asciidoc\'},\\n  {text: \'Assembly\', value:\'assembly_x86\'},\\n  {text: \'AutoHotKey\', value:\'autohotkey\'},\\n  {text: \'BatchFile\', value:\'batchfile\'},\\n  {text: \'C\', value:\'c_cpp\'},\\n  {text: \'C9Search\', value:\'c9search\'},\\n  {text: \'Cirru\', value:\'cirru\'},\\n  {text: \'Clojure\', value:\'clojure\'},\\n  {text: \'Cobol\', value:\'cobol\'},\\n  {text: \'CoffeeScript\', value:\'coffee\'},\\n  {text: \'ColdFusion\', value:\'coldfusion\'},\\n  {text: \'C\', value:\'csharp\'},\\n  {text: \'CSS\', value:\'css\'},\\n  {text: \'Curly\', value:\'curly\'},\\n  {text: \'D\', value:\'d\'},\\n  {text: \'Dart\', value:\'dart\'},\\n  {text: \'Diff\', value:\'diff\'},\\n  {text: \'Dockerfile\', value:\'dockerfile\'},\\n  {text: \'Dot\', value:\'dot\'},\\n  {text: \'Eiffel\', value:\'eiffel\'},\\n  {text: \'EJS\', value:\'ejs\'},\\n  {text: \'Elixir\', value:\'elixir\'},\\n  {text: \'Elm\', value:\'elm\'},\\n  {text: \'Erlang\', value:\'erlang\'},\\n  {text: \'Forth\', value:\'forth\'},\\n  {text: \'FreeMarker\', value:\'ftl\'},\\n  {text: \'Gcode\', value:\'gcode\'},\\n  {text: \'Gherkin\', value:\'gherkin\'},\\n  {text: \'Gitignore\', value:\'gitignore\'},\\n  {text: \'Glsl\', value:\'glsl\'},\\n  {text: \'Gobstones\', value:\'gobstones\'},\\n  {text: \'Go\', value:\'golang\'},\\n  {text: \'Groovy\', value:\'groovy\'},\\n  {text: \'HAML\', value:\'haml\'},\\n  {text: \'Handlebars\', value:\'handlebars\'},\\n  {text: \'Haskell\', value:\'haskell\'},\\n  {text: \'haXe\', value:\'haxe\'},\\n  {text: \'HTML\', value:\'html\'},\\n  {text: \'HTML\', value:\'html_elixir\'},\\n  {text: \'HTML\', value:\'html_ruby\'},\\n  {text: \'INI\', value:\'ini\'},\\n  {text: \'Io\', value:\'io\'},\\n  {text: \'Jack\', value:\'jack\'},\\n  {text: \'Jade\', value:\'jade\'},\\n  {text: \'Java\', value:\'java\'},\\n  {text: \'JavaScript\', value:\'javascript\'},\\n  {text: \'JSON\', value:\'json\'},\\n  {text: \'JSONiq\', value:\'jsoniq\'},\\n  {text: \'JSP\', value:\'jsp\'},\\n  {text: \'JSX\', value:\'jsx\'},\\n  {text: \'Julia\', value:\'julia\'},\\n  {text: \'LaTeX\', value:\'latex\'},\\n  {text: \'Lean\', value:\'lean\'},\\n  {text: \'LESS\', value:\'less\'},\\n  {text: \'Liquid\', value:\'liquid\'},\\n  {text: \'Lisp\', value:\'lisp\'},\\n  {text: \'LiveScript\', value:\'livescript\'},\\n  {text: \'LogiQL\', value:\'logiql\'},\\n  {text: \'LSL\', value:\'lsl\'},\\n  {text: \'Lua\', value:\'lua\'},\\n  {text: \'LuaPage\', value:\'luapage\'},\\n  {text: \'Lucene\', value:\'lucene\'},\\n  {text: \'Makefile\', value:\'makefile\'},\\n  {text: \'Markdown\', value:\'markdown\'},\\n  {text: \'Mask\', value:\'mask\'},\\n  {text: \'MATLAB\', value:\'matlab\'},\\n  {text: \'Maze\', value:\'maze\'},\\n  {text: \'MEL\', value:\'mel\'},\\n  {text: \'MUSHCode\', value:\'mushcode\'},\\n  {text: \'MySQL\', value:\'mysql\'},\\n  {text: \'Nix\', value:\'nix\'},\\n  {text: \'NSIS\', value:\'nsis\'},\\n  {text: \'Objective\', value:\'objectivec\'},\\n  {text: \'OCaml\', value:\'ocaml\'},\\n  {text: \'Pascal\', value:\'pascal\'},\\n  {text: \'Perl\', value:\'perl\'},\\n  {text: \'pgSQL\', value:\'pgsql\'},\\n  {text: \'PHP\', value:\'php\'},\\n  {text: \'Powershell\', value:\'powershell\'},\\n  {text: \'Praat\', value:\'praat\'},\\n  {text: \'Prolog\', value:\'prolog\'},\\n  {text: \'Properties\', value:\'properties\'},\\n  {text: \'Protobuf\', value:\'protobuf\'},\\n  {text: \'Python\', value:\'python\'},\\n  {text: \'R\', value:\'r\'},\\n  {text: \'Razor\', value:\'razor\'},\\n  {text: \'RDoc\', value:\'rdoc\'},\\n  {text: \'RHTML\', value:\'rhtml\'},\\n  {text: \'RST\', value:\'rst\'},\\n  {text: \'Ruby\', value:\'ruby\'},\\n  {text: \'Rust\', value:\'rust\'},\\n  {text: \'SASS\', value:\'sass\'},\\n  {text: \'SCAD\', value:\'scad\'},\\n  {text: \'Scala\', value:\'scala\'},\\n  {text: \'Scheme\', value:\'scheme\'},\\n  {text: \'SCSS\', value:\'scss\'},\\n  {text: \'SH\', value:\'sh\'},\\n  {text: \'SJS\', value:\'sjs\'},\\n  {text: \'Smarty\', value:\'smarty\'},\\n  {text: \'snippets\', value:\'snippets\'},\\n  {text: \'Soy\', value:\'soy_template\'},\\n  {text: \'Space\', value:\'space\'},\\n  {text: \'SQL\', value:\'sql\'},\\n  {text: \'SQLServer\', value:\'sqlserver\'},\\n  {text: \'Stylus\', value:\'stylus\'},\\n  {text: \'SVG\', value:\'svg\'},\\n  {text: \'Swift\', value:\'swift\'},\\n  {text: \'Tcl\', value:\'tcl\'},\\n  {text: \'Tex\', value:\'tex\'},\\n  {text: \'Text\', value:\'text\'},\\n  {text: \'Textile\', value:\'textile\'},\\n  {text: \'Toml\', value:\'toml\'},\\n  {text: \'Twig\', value:\'twig\'},\\n  {text: \'Typescript\', value:\'typescript\'},\\n  {text: \'Vala\', value:\'vala\'},\\n  {text: \'VBScript\', value:\'vbscript\'},\\n  {text: \'Velocity\', value:\'velocity\'},\\n  {text: \'Verilog\', value:\'verilog\'},\\n  {text: \'VHDL\', value:\'vhdl\'},\\n  {text: \'Wollok\', value:\'wollok\'},\\n  {text: \'XML\', value:\'xml\'},\\n  {text: \'XQuery\', value:\'xquery\'},\\n  {text: \'YAML\', value:\'yaml\'},\\n  {text: \'Django\', value:\'django\'}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change font size on the fly\\naceMoreSuperOptionsToolButtonFONT =[\\n  {text: \'10px\', onclick: setAceSetFont},\\n  {text: \'11px\', onclick: setAceSetFont},\\n  {text: \'12px\', onclick: setAceSetFont},\\n  {text: \'13px\', onclick: setAceSetFont},\\n  {text: \'14px\', onclick: setAceSetFont},\\n  {text: \'15px\', onclick: setAceSetFont},\\n  {text: \'16px\', onclick: setAceSetFont},\\n  {text: \'18px\', onclick: setAceSetFont},\\n  {text: \'20px\', onclick: setAceSetFont},\\n  {text: \'24px\', onclick: setAceSetFont}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change wrap style\\naceMoreSuperOptionsToolButtonWRAP =[\\n  {text: \'free\', onclick: setAceSetWrap},\\n  {text: \'40\', onclick: setAceSetWrap},\\n  {text: \'80\', onclick: setAceSetWrap},\\n  {text: \'off\', onclick: setAceSetWrap},\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change height\\/max lines\\naceMoreSuperOptionsToolButtonHEIGHT =[\\n  {text: \'1\', onclick: setAceSetHeight},\\n  {text: \'10\', onclick: setAceSetHeight},\\n  {text: \'Infinity\', onclick: setAceSetHeight},\\n  {text: \'Textarea\', onclick: setAceSetHeight}\\n];\\n\\n\\/\\/ kitchen sink\\n\\/\\/ change theme on the fly\\naceMoreSuperOptionsToolButtonTHEME = [\\n  {text: \'---- Bright ----\', disabled: true, selected: false},\\n  {text: \'Chrome\', onclick: setAceSetTheme},\\n  {text: \'Clouds\', onclick: setAceSetTheme},\\n  {text: \'Crimson Editor\', onclick: setAceSetTheme},\\n  {text: \'Dawn\', onclick: setAceSetTheme},\\n  {text: \'Dreamweaver\', onclick: setAceSetTheme},\\n  {text: \'Eclipse\', onclick: setAceSetTheme},\\n  {text: \'GitHub\', onclick: setAceSetTheme},\\n  {text: \'IPlastic\', onclick: setAceSetTheme},\\n  {text: \'Solarized Light\', onclick: setAceSetTheme},\\n  {text: \'TextMate\', onclick: setAceSetTheme},\\n  {text: \'Tomorrow\', onclick: setAceSetTheme},\\n  {text: \'XCode\', onclick: setAceSetTheme},\\n  {text: \'Kuroir\', onclick: setAceSetTheme},\\n  {text: \'KatzenMilch\', onclick: setAceSetTheme},\\n  {text: \'SQL Server\', onclick: setAceSetTheme},\\n  {text: \'---- Dark ----\', disabled: true, selected: false},\\n  {text: \'Ambiance\', onclick: setAceSetTheme},\\n  {text: \'Chaos\', onclick: setAceSetTheme},\\n  {text: \'Clouds Midnight\', onclick: setAceSetTheme},\\n  {text: \'Cobalt\', onclick: setAceSetTheme},\\n  {text: \'idle Fingers\', onclick: setAceSetTheme},\\n  {text: \'krTheme\', onclick: setAceSetTheme},\\n  {text: \'Merbivore\', onclick: setAceSetTheme},\\n  {text: \'Merbivore Soft\', onclick: setAceSetTheme},\\n  {text: \'Mono Industrial\', onclick: setAceSetTheme},\\n  {text: \'Monokai\', onclick: setAceSetTheme},\\n  {text: \'Pastel on dark\', onclick: setAceSetTheme},\\n  {text: \'Solarized Dark\', onclick: setAceSetTheme},\\n  {text: \'Terminal\', onclick: setAceSetTheme},\\n  {text: \'Tomorrow Night\', onclick: setAceSetTheme},\\n  {text: \'Tomorrow Night Blue\', onclick: setAceSetTheme},\\n  {text: \'Tomorrow Night Bright\', onclick: setAceSetTheme},\\n  {text: \'Tomorrow Night Eighties\', onclick: setAceSetTheme},\\n  {text: \'Twilight\', onclick: setAceSetTheme},\\n  {text: \'Vibrant Ink\', onclick: setAceSetTheme}\\n];\\n\\n\\/\\/ kitchen sink toolbar ini\\nfunction aceMoreSuperOptions(){\\n  if(typeof tinymce !== \\"undefined\\" && !$(\\"#aceMoreSuperOptions_wrapper\\").length){\\n    $(\\"body\\").append(\\"<div id=aceMoreSuperOptions_wrapper><div id=aceMoreSuperOptions_wrapper_boss><\\/div><div style=display:none; id=aceMoreSuperOptions_wrapper_sub><\\/div><\\/div>\\");\\n    tinymce.ui.Factory.create({\\n      type: \\"button\\",\\n      icon: \\"fullpage\\",\\n      classes:\\"moreAceAttr\\",\\n      tooltip: \\"Ace Settings...\\",\\n      onPostRender:function(){\\n        $(\\".mce-moreAceAttr\\").attr(\\"class\\",\\"mce-moreAceAttr\\");\\n        $(\\".mce-moreAceAttr button\\").contents().unwrap();\\n      },\\n      onclick: function(){\\n        if($(\'#aceMoreSuperOptions_wrapper_sub:hidden\').length){\\n          $(\'#aceMoreSuperOptions_wrapper_sub\').show()\\n          $(\'.mce-moreAceAttr\').addClass(\'mce-active\')\\n        }\\n        else{\\n          $(\'#aceMoreSuperOptions_wrapper_sub\').hide()\\n          $(\'.mce-moreAceAttr\').removeClass(\'mce-active\')\\n        }\\n      }\\n    }).renderTo(document.getElementById(\\"aceMoreSuperOptions_wrapper_boss\\"));\\n    tinymce.ui.Factory.create({\\n      type: \'button\',\\n      icon: \'fullscreen\',\\n      classes: \'aceMoreSuperOptionsFS\',\\n      tooltip: \'Fullscreen\',\\n      onclick: function(){\\n        if(getAceCredential().thisWrap.hasClass(\\"ace_editor_fullScreen\\")){\\n          getAceCredential().thisWrap.removeClass(\\"ace_editor_fullScreen\\");\\n          $(\\"#aceMoreSuperOptions_wrapper\\").removeClass(\\"ace_editor_fullScreen\\");\\n          ace.edit(getAceCredential().thisAceId).resize();\\n        }\\n        else{\\n          getAceCredential().thisWrap.addClass(\\"ace_editor_fullScreen\\")\\n          $(\\"#aceMoreSuperOptions_wrapper\\").addClass(\\"ace_editor_fullScreen\\");\\n          ace.edit(getAceCredential().thisAceId).resize();\\n        }\\n      },\\n      onPostRender:function(){\\n        \\/\\/ $(\\".mce-aceMoreSuperOptions .mce-caret\\").remove();\\n        $(document).on(\\"mouseenter click\\", \\".ace_wrapper_modx\\", function () {\\n          if(!$(this).find(\\"#aceMoreSuperOptions_wrapper\\").length){\\n            $(\\"#aceMoreSuperOptions_wrapper\\").prependTo($(this)).fadeIn();\\n            aceMoreSuperOptions();\\n          }\\n        })\\n      }\\n    }).renderTo(document.getElementById(\\"aceMoreSuperOptions_wrapper_sub\\"));\\n    tinymce.ui.Factory.create({\\n      type: \'listbox\',\\n      icon: \'code\',\\n      classes: \'aceMoreSuperOptionsMODE\',\\n      tooltip: \'Syntax \\/ Mode\',\\n      menu: aceMoreSuperOptionsToolButtonMODE,\\n      onPostRender: function(){\\n        $(\\".mce-aceMoreSuperOptionsMODE .mce-caret\\").remove();\\n        $(\\".mce-aceMoreSuperOptionsMODE .mce-txt\\").remove();\\n      },\\n      onselect: function(){\\n        ace.edit(getAceCredential().thisAceId).getSession().setMode(\\"ace\\/mode\\/\\"+this.value())\\n        ace.edit(getAceCredential().thisAceId).resize();\\n        getAceCredential().thisSink.text(this.value())\\n        $(\\".mce-aceMoreSuperOptionsMODE .mce-txt\\").remove();\\n      }\\n    }).renderTo(document.getElementById(\\"aceMoreSuperOptions_wrapper_sub\\"));\\n\\n    tinymce.ui.Factory.create({\\n      \\/\\/ icon: \\"fullpage\\",\\n      type: \'menubutton\',\\n      classes: \'aceMoreSuperOptionsMORE\',\\n      tooltip: \'Themes and more Options\',\\n      onPostRender:function(){\\n        \\/\\/ $(\\".mce-aceMoreSuperOptionsMORE .mce-caret\\").remove();\\n      },\\n      menu: [\\n      {\\n        text: \\"Show Invisibles\\",\\n        classes: \\"setShowInvisibles\\",\\n        onclick: function(){\\n          if(ace.edit(getAceCredential().thisAceId).getOption(\\"showInvisibles\\")){\\n            ace.edit(getAceCredential().thisAceId).setShowInvisibles(false);\\n          }\\n          else{\\n            ace.edit(getAceCredential().thisAceId).setShowInvisibles(true);\\n          }\\n        }\\n      },\\n      {\\n        text: \\"Scroll Past End\\",\\n        classes: \\"setScroll\\",\\n        onclick: function(){\\n          if(ace.edit(getAceCredential().thisAceId).getOption(\\"scrollPastEnd\\")){\\n            ace.edit(getAceCredential().thisAceId).setOption(\\"scrollPastEnd\\", false);\\n            ace.edit(getAceCredential().thisAceId).resize();\\n          }\\n          else{\\n            ace.edit(getAceCredential().thisAceId).setOption(\\"scrollPastEnd\\", true);\\n            ace.edit(getAceCredential().thisAceId).resize();\\n          }\\n        }\\n      },\\n      {\\n        text: \\"Refresh Editor\\",\\n        onclick: function(){\\n          ace.edit(getAceCredential().thisAceId).resize();\\n        }\\n      },\\n      {\\n        text: \\"Soft Wrap\\",\\n        menu: aceMoreSuperOptionsToolButtonWRAP\\n      },\\n      {\\n        text: \\"Max Height\\",\\n        menu: aceMoreSuperOptionsToolButtonHEIGHT\\n      },\\n      {\\n        text: \\"Theme\\",\\n        menu: aceMoreSuperOptionsToolButtonTHEME\\n      },\\n      {\\n        text: \\"Font Size\\",\\n        menu: aceMoreSuperOptionsToolButtonFONT,\\n      },\\n      ],\\n    }).renderTo(document.getElementById(\\"aceMoreSuperOptions_wrapper_sub\\"));\\n    if(tinymce.editors.length < 1){\\n      \\/\\/ fileManagerTopNavModalSkin = MODx.config.assets_url+\\"components\\/tinymcewrapper\\/tinymceskins\\/modxPericles\\/\\"+\\"skin.min.css\\";\\n      tinymce.DOM.loadCSS(fileManagerTopNavModalSkin+\\"\\/skin.min.css\\");\\n    }\\n  }\\n}\\n\\/\\/ ************************** END Kitchen Sink **************************\\n\\n\\n\\/*#######################################################################################\\n   *************** MODX INIT : load applicable JS and CSS files ***************\\n#######################################################################################*\\/\\nExt.Loader.load([\\n  \'[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/ace\\/emmet.min.js\',\\n  \'[[+AceSrc]]ext-emmet.js\',\\n  \'[[+AceSrc]]ext-modelist.js\',\\n ],\\n  function() {\\n    Ext.onReady(function () {\\n      aceTextareas();\\n    \\/\\/ }) \\/\\/ use this instead of delay\\n    },this,{delay:50}) \\/\\/ delay 100 always works well\\n  }\\n)\\nemmetForAceIsLoaded = true; \\/\\/ this helps other Ace implementations to piggy-back on this emmet\\n"}',
        'guid' => 'efe0e5172bdb6df717fd3188ad4bd14e',
        'native_key' => 9,
        'signature' => '8ec2c88f7c006bef5265491d8588b6a0',
      ),
      '1341df142e624f99003758b88ade68e8' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":10,"source":0,"property_preprocess":0,"name":"sample.TinymceWrapperMarkdown","description":"Transform any TinyMCE editor into a powerful and beautiful Markdown Editor. Works with twExoticMarkdownEditor.js, allows floating tinymceBubbleBar.js toolbar, contextmenu, modxMagicHoverLink, twPreCodeManager.js","editor_type":0,"category":0,"cache_type":0,"snippet":"tinymce.init({\\n  selector: \\"textarea\\",\\n  \\/\\/inline: true, \\/\\/for contenteditable selector\\n  forced_root_block : \\"\\", \\/\\/!important\\n  force_br_newlines : true, \\/\\/!important\\n  force_p_newlines : false, \\/\\/!important\\n  valid_elements: \\"br\\", \\/\\/!important\\n  paste_as_text: true, \\/\\/!important\\n  external_plugins: {\\n    twExoticMarkdownEditor: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twExoticMarkdownEditor.js\\", \\/\\/!important\\n    bubbleBar: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/tinymceBubbleBar.js\\", \\/\\/!important\\n    twPreCodeManager: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twPreCodeManager.js\\",\\n    modxMagicHoverLink: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/modxMagicHoverLink.js\\",\\n  },\\n  twExoticMarkdownSettings: {\\n    addClass: false, \\/\\/default is true (add .twExoticMarkdownEditor class to editor body)\\n    removeClasses: \\"a b c\\", \\/\\/ remove class(es) when editor loads - smoothly reveal editor only after text has been prepared\\n    skipClass: \\"\\", \\/\\/ do not process this particular editor content, skip it!\\n    addAttr: false, \\/\\/default is true (add markdown=\\"1\\" to editor body) good for parsing mixed content in mark\\/parsedownExtra\\n  },\\n  plugins: \\"paste contextmenu save searchreplace\\", \\/\\/!important\\n  toolbar: \\"modxMagicHoverLink twPreCodeManager boldMD italicMD linkMD imageMD blockquoteMD codeMD numlistMD bullistMD tableMD undo redo searchreplace bubbleBarOptionsButton\\", \\/\\/!important\\n  menubar: false,\\n  contextmenu: \\"modxMagicHoverLink twPreCodeManager boldMD italicMD linkMD imageMD blockquoteMD codeMD numlistMD bullistMD tableMD undo redo searchreplace template\\" \\/\\/!important\\n})","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"tinymce.init({\\n  selector: \\"textarea\\",\\n  \\/\\/inline: true, \\/\\/for contenteditable selector\\n  forced_root_block : \\"\\", \\/\\/!important\\n  force_br_newlines : true, \\/\\/!important\\n  force_p_newlines : false, \\/\\/!important\\n  valid_elements: \\"br\\", \\/\\/!important\\n  paste_as_text: true, \\/\\/!important\\n  external_plugins: {\\n    twExoticMarkdownEditor: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twExoticMarkdownEditor.js\\", \\/\\/!important\\n    bubbleBar: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/tinymceBubbleBar.js\\", \\/\\/!important\\n    twPreCodeManager: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/twPreCodeManager.js\\",\\n    modxMagicHoverLink: \\"[[++assets_url]]components\\/tinymcewrapper\\/tinymceplugins\\/modxMagicHoverLink.js\\",\\n  },\\n  twExoticMarkdownSettings: {\\n    addClass: false, \\/\\/default is true (add .twExoticMarkdownEditor class to editor body)\\n    removeClasses: \\"a b c\\", \\/\\/ remove class(es) when editor loads - smoothly reveal editor only after text has been prepared\\n    skipClass: \\"\\", \\/\\/ do not process this particular editor content, skip it!\\n    addAttr: false, \\/\\/default is true (add markdown=\\"1\\" to editor body) good for parsing mixed content in mark\\/parsedownExtra\\n  },\\n  plugins: \\"paste contextmenu save searchreplace\\", \\/\\/!important\\n  toolbar: \\"modxMagicHoverLink twPreCodeManager boldMD italicMD linkMD imageMD blockquoteMD codeMD numlistMD bullistMD tableMD undo redo searchreplace bubbleBarOptionsButton\\", \\/\\/!important\\n  menubar: false,\\n  contextmenu: \\"modxMagicHoverLink twPreCodeManager boldMD italicMD linkMD imageMD blockquoteMD codeMD numlistMD bullistMD tableMD undo redo searchreplace template\\" \\/\\/!important\\n})"}',
        'guid' => '4902148f205673f14d9472ec9ef24bdc',
        'native_key' => 10,
        'signature' => '4900594e93d5d0d06cacbe2b05acb201',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'tinymcewrapper',
  'resolve' => NULL,
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '43ae2b4e5093b1c1ffcd6a8bbf0fa0c1',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '13f16676f8b258f2b6f7e01a38d6a821',
  'native_key' => 9,
  'object' => '{"id":9,"parent":0,"category":"Backend","rank":0}',
);